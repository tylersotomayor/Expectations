{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ec9f3fa1-1b99-4846-8c15-fa0ae7f5a43e",
   "metadata": {},
   "source": [
    "# Step 1: Load and Preview the MSC Data\n",
    "\n",
    "In this step, we import the necessary libraries, load the raw dataset (`AAGqi6bz.csv`), and preview the structure of key variables.\n",
    "We'll verify that columns such as `PX1Q2`, `UNEMP`, `ID`, `IDPREV`, `IDPREV2`, `YYYYMM`, `DATEPR`, and `DATEPR2` are present and formatted as expected.\n",
    "\n",
    "This will serve as the foundation for constructing our panel dataset\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b5ed7930-99b9-4a4b-baed-cf03c86a66d0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 330503 entries, 0 to 330502\n",
      "Data columns (total 10 columns):\n",
      " #   Column   Non-Null Count   Dtype \n",
      "---  ------   --------------   ----- \n",
      " 0   CASEID   330503 non-null  int64 \n",
      " 1   YYYYMM   330503 non-null  int64 \n",
      " 2   ID       330503 non-null  int64 \n",
      " 3   IDPREV   330503 non-null  object\n",
      " 4   DATEPR   330503 non-null  object\n",
      " 5   IDPREV2  330503 non-null  object\n",
      " 6   DATEPR2  330503 non-null  object\n",
      " 7   PX1Q2    330503 non-null  object\n",
      " 8   UNEMP    330503 non-null  int64 \n",
      " 9   WT_HH    330503 non-null  object\n",
      "dtypes: int64(4), object(6)\n",
      "memory usage: 25.2+ MB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PX1Q2</th>\n",
       "      <th>UNEMP</th>\n",
       "      <th>ID</th>\n",
       "      <th>IDPREV</th>\n",
       "      <th>IDPREV2</th>\n",
       "      <th>YYYYMM</th>\n",
       "      <th>DATEPR</th>\n",
       "      <th>DATEPR2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>197801</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>197801</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>197801</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>197801</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td></td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>197801</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>98</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>197801</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>98</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>197801</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>197801</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>197801</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>98</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>197801</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PX1Q2  UNEMP  ID       IDPREV      IDPREV2  YYYYMM  DATEPR     DATEPR2\n",
       "0     3      1   1                            197801                    \n",
       "1    10      3   2                            197801                    \n",
       "2    20      3   3                            197801                    \n",
       "3     4      3   4                            197801                    \n",
       "4            3   5                            197801                    \n",
       "5    98      3   6                            197801                    \n",
       "6    98      3   7                            197801                    \n",
       "7     6      3   8                            197801                    \n",
       "8    98      1   9                            197801                    \n",
       "9    98      5  10                            197801                    "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import necessary libraries\n",
    "import pandas as pd\n",
    "\n",
    "# Load the dataset\n",
    "file_path = 'AAGqi6bz.csv'\n",
    "df = pd.read_csv(file_path, low_memory=False)\n",
    "\n",
    "# Display basic info\n",
    "df.info()\n",
    "\n",
    "# Show the first 10 rows of key columns\n",
    "df[['PX1Q2', 'UNEMP', 'ID', 'IDPREV', 'IDPREV2', 'YYYYMM', 'DATEPR', 'DATEPR2']].head(10)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ff52893-0973-4929-9fd6-6b8a512fcb87",
   "metadata": {},
   "source": [
    "# Step 2: Clean Inflation and Unemployment Expectations\n",
    "\n",
    "In this step, we:\n",
    "- Convert `PX1Q2` (expected inflation) to numeric, setting top-coded (95), DK (98), and NA (99) appropriately.\n",
    "- Identify and set missing values in `PX1Q2`.\n",
    "- Confirm that `UNEMP` is already numeric and create dummy variables for \"more\" and \"less\" unemployment expectations.\n",
    "- Convert `IDPREV`, `IDPREV2`, `DATEPR`, and `DATEPR2` to numeric values to prepare for constructing a panel.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "114b360a-6dfb-424e-ae6c-f6554528ab33",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PX1Q2</th>\n",
       "      <th>UNEMP</th>\n",
       "      <th>D_more</th>\n",
       "      <th>D_less</th>\n",
       "      <th>IDPREV</th>\n",
       "      <th>IDPREV2</th>\n",
       "      <th>DATEPR</th>\n",
       "      <th>DATEPR2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>6.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PX1Q2  UNEMP  D_more  D_less  IDPREV  IDPREV2  DATEPR  DATEPR2\n",
       "0    3.0      1     1.0     0.0     NaN      NaN     NaN      NaN\n",
       "1   10.0      3     0.0     0.0     NaN      NaN     NaN      NaN\n",
       "2   20.0      3     0.0     0.0     NaN      NaN     NaN      NaN\n",
       "3    4.0      3     0.0     0.0     NaN      NaN     NaN      NaN\n",
       "4    NaN      3     0.0     0.0     NaN      NaN     NaN      NaN\n",
       "5    NaN      3     0.0     0.0     NaN      NaN     NaN      NaN\n",
       "6    NaN      3     0.0     0.0     NaN      NaN     NaN      NaN\n",
       "7    6.0      3     0.0     0.0     NaN      NaN     NaN      NaN\n",
       "8    NaN      1     1.0     0.0     NaN      NaN     NaN      NaN\n",
       "9    NaN      5     0.0     1.0     NaN      NaN     NaN      NaN"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "# Clean PX1Q2\n",
    "df['PX1Q2'] = pd.to_numeric(df['PX1Q2'], errors='coerce')  # convert to numeric\n",
    "df.loc[df['PX1Q2'] >= 98, 'PX1Q2'] = np.nan                # set DK/NA to NaN\n",
    "df['PX1Q2'] = df['PX1Q2'].clip(upper=95)                   # cap at 95%\n",
    "\n",
    "# Clean linking columns\n",
    "df['IDPREV'] = pd.to_numeric(df['IDPREV'], errors='coerce')\n",
    "df['IDPREV2'] = pd.to_numeric(df['IDPREV2'], errors='coerce')\n",
    "df['DATEPR'] = pd.to_numeric(df['DATEPR'], errors='coerce')\n",
    "df['DATEPR2'] = pd.to_numeric(df['DATEPR2'], errors='coerce')\n",
    "\n",
    "# Create dummies for unemployment expectations\n",
    "df['D_more'] = (df['UNEMP'] == 1).astype(int)\n",
    "df['D_less'] = (df['UNEMP'] == 5).astype(int)\n",
    "df.loc[df['UNEMP'].isin([8, 9]), ['D_more', 'D_less']] = np.nan  # mark missing expectations\n",
    "\n",
    "# Check cleaned columns\n",
    "df[['PX1Q2', 'UNEMP', 'D_more', 'D_less', 'IDPREV', 'IDPREV2', 'DATEPR', 'DATEPR2']].head(10)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d8edc49-de04-41e9-8281-9c2e38260040",
   "metadata": {},
   "source": [
    "# Step 3: Constructing a Unique `person_id` Using Interview Links\n",
    "\n",
    "Each interview is identified by an `ID` and a `YYYYMM` timestamp. Some respondents are interviewed more than once across different months. \n",
    "\n",
    "To create a unique identifier for each respondent (`person_id`), we:\n",
    "1. Initialize each row with a temporary `person_id` equal to its row index.\n",
    "2. Then look for rows where the `IDPREV` and `DATEPR` of a current interview match the `ID` and `YYYYMM` of a previous interview.\n",
    "3. When a match is found, we assign the same `person_id` from the earlier row to the current one.\n",
    "4. We repeat this process iteratively until all matches are resolved.\n",
    "\n",
    "This method allows us to follow respondents across survey waves.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0c8962a2-2bc6-477e-aebb-4f19b5b59844",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp_id</th>\n",
       "      <th>person_id</th>\n",
       "      <th>ID</th>\n",
       "      <th>IDPREV</th>\n",
       "      <th>YYYYMM</th>\n",
       "      <th>DATEPR</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>6.0</td>\n",
       "      <td>7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>7.0</td>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>8.0</td>\n",
       "      <td>9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>10.0</td>\n",
       "      <td>11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>11.0</td>\n",
       "      <td>12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>12.0</td>\n",
       "      <td>13</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>13</td>\n",
       "      <td>13.0</td>\n",
       "      <td>14</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>14</td>\n",
       "      <td>14.0</td>\n",
       "      <td>15</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>15.0</td>\n",
       "      <td>16</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>16</td>\n",
       "      <td>16.0</td>\n",
       "      <td>17</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>17.0</td>\n",
       "      <td>18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>18.0</td>\n",
       "      <td>19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>19.0</td>\n",
       "      <td>20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    temp_id  person_id  ID  IDPREV  YYYYMM  DATEPR\n",
       "0         0        0.0   1     NaN  197801     NaN\n",
       "1         1        1.0   2     NaN  197801     NaN\n",
       "2         2        2.0   3     NaN  197801     NaN\n",
       "3         3        3.0   4     NaN  197801     NaN\n",
       "4         4        4.0   5     NaN  197801     NaN\n",
       "5         5        5.0   6     NaN  197801     NaN\n",
       "6         6        6.0   7     NaN  197801     NaN\n",
       "7         7        7.0   8     NaN  197801     NaN\n",
       "8         8        8.0   9     NaN  197801     NaN\n",
       "9         9        9.0  10     NaN  197801     NaN\n",
       "10       10       10.0  11     NaN  197801     NaN\n",
       "11       11       11.0  12     NaN  197801     NaN\n",
       "12       12       12.0  13     NaN  197801     NaN\n",
       "13       13       13.0  14     NaN  197801     NaN\n",
       "14       14       14.0  15     NaN  197801     NaN\n",
       "15       15       15.0  16     NaN  197801     NaN\n",
       "16       16       16.0  17     NaN  197801     NaN\n",
       "17       17       17.0  18     NaN  197801     NaN\n",
       "18       18       18.0  19     NaN  197801     NaN\n",
       "19       19       19.0  20     NaN  197801     NaN"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Step 3a: Initialize temporary person_id\n",
    "df = df.reset_index(drop=False).rename(columns={\"index\": \"temp_id\"})  # temp_id will help track original rows\n",
    "df[\"person_id\"] = df[\"temp_id\"]  # start by assigning each row a unique ID\n",
    "\n",
    "# Step 3b: Merge to find matching prior interviews using IDPREV + DATEPR\n",
    "# Create a lookup DataFrame with ID + YYYYMM (rename to match DATEPR)\n",
    "lookup = df[[\"person_id\", \"ID\", \"YYYYMM\"]].rename(columns={\n",
    "    \"ID\": \"IDPREV_match\",\n",
    "    \"YYYYMM\": \"DATEPR_match\",\n",
    "    \"person_id\": \"matched_person_id\"\n",
    "})\n",
    "\n",
    "# Merge on current row's IDPREV and DATEPR with previous row's ID and YYYYMM\n",
    "df = df.merge(\n",
    "    lookup,\n",
    "    how=\"left\",\n",
    "    left_on=[\"IDPREV\", \"DATEPR\"],\n",
    "    right_on=[\"IDPREV_match\", \"DATEPR_match\"]\n",
    ")\n",
    "\n",
    "# Where a match is found, assign the matched person_id\n",
    "df[\"person_id\"] = df[\"matched_person_id\"].combine_first(df[\"person_id\"])\n",
    "\n",
    "# Clean up temporary merge columns\n",
    "df.drop(columns=[\"IDPREV_match\", \"DATEPR_match\", \"matched_person_id\"], inplace=True)\n",
    "\n",
    "# Check result: look at cases where linking occurred\n",
    "df[[\"temp_id\", \"person_id\", \"ID\", \"IDPREV\", \"YYYYMM\", \"DATEPR\"]].head(20)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73cae994-3a69-4b67-8982-d6e20c57b134",
   "metadata": {},
   "source": [
    "# Step 3 (continued): Linking Reinterviews Using IDPREV and IDPREV2\n",
    "\n",
    "Now that we’ve initialized a `person_id` for each interview, we extend the linking logic to:\n",
    "- Match second interviews based on `IDPREV` + `DATEPR`\n",
    "- Match third interviews based on `IDPREV2` + `DATEPR2`\n",
    "\n",
    "This allows us to construct a consistent panel of respondents across up to three waves.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "eb0c178e-fc17-429c-834f-413cdcdcd376",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp_id</th>\n",
       "      <th>person_id</th>\n",
       "      <th>ID</th>\n",
       "      <th>IDPREV</th>\n",
       "      <th>IDPREV2</th>\n",
       "      <th>YYYYMM</th>\n",
       "      <th>DATEPR</th>\n",
       "      <th>DATEPR2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>6.0</td>\n",
       "      <td>7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>7.0</td>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>8.0</td>\n",
       "      <td>9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>10.0</td>\n",
       "      <td>11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>11.0</td>\n",
       "      <td>12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>12.0</td>\n",
       "      <td>13</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>13</td>\n",
       "      <td>13.0</td>\n",
       "      <td>14</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>14</td>\n",
       "      <td>14.0</td>\n",
       "      <td>15</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>15.0</td>\n",
       "      <td>16</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>16</td>\n",
       "      <td>16.0</td>\n",
       "      <td>17</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>17.0</td>\n",
       "      <td>18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>18.0</td>\n",
       "      <td>19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>19.0</td>\n",
       "      <td>20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>20</td>\n",
       "      <td>20.0</td>\n",
       "      <td>21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>21</td>\n",
       "      <td>21.0</td>\n",
       "      <td>22</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>22</td>\n",
       "      <td>22.0</td>\n",
       "      <td>23</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>23</td>\n",
       "      <td>23.0</td>\n",
       "      <td>24</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>24</td>\n",
       "      <td>24.0</td>\n",
       "      <td>25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>25</td>\n",
       "      <td>25.0</td>\n",
       "      <td>26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>26</td>\n",
       "      <td>26.0</td>\n",
       "      <td>27</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>27</td>\n",
       "      <td>27.0</td>\n",
       "      <td>28</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>28</td>\n",
       "      <td>28.0</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>29</td>\n",
       "      <td>29.0</td>\n",
       "      <td>30</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>197801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    temp_id  person_id  ID  IDPREV  IDPREV2  YYYYMM  DATEPR  DATEPR2\n",
       "0         0        0.0   1     NaN      NaN  197801     NaN      NaN\n",
       "1         1        1.0   2     NaN      NaN  197801     NaN      NaN\n",
       "2         2        2.0   3     NaN      NaN  197801     NaN      NaN\n",
       "3         3        3.0   4     NaN      NaN  197801     NaN      NaN\n",
       "4         4        4.0   5     NaN      NaN  197801     NaN      NaN\n",
       "5         5        5.0   6     NaN      NaN  197801     NaN      NaN\n",
       "6         6        6.0   7     NaN      NaN  197801     NaN      NaN\n",
       "7         7        7.0   8     NaN      NaN  197801     NaN      NaN\n",
       "8         8        8.0   9     NaN      NaN  197801     NaN      NaN\n",
       "9         9        9.0  10     NaN      NaN  197801     NaN      NaN\n",
       "10       10       10.0  11     NaN      NaN  197801     NaN      NaN\n",
       "11       11       11.0  12     NaN      NaN  197801     NaN      NaN\n",
       "12       12       12.0  13     NaN      NaN  197801     NaN      NaN\n",
       "13       13       13.0  14     NaN      NaN  197801     NaN      NaN\n",
       "14       14       14.0  15     NaN      NaN  197801     NaN      NaN\n",
       "15       15       15.0  16     NaN      NaN  197801     NaN      NaN\n",
       "16       16       16.0  17     NaN      NaN  197801     NaN      NaN\n",
       "17       17       17.0  18     NaN      NaN  197801     NaN      NaN\n",
       "18       18       18.0  19     NaN      NaN  197801     NaN      NaN\n",
       "19       19       19.0  20     NaN      NaN  197801     NaN      NaN\n",
       "20       20       20.0  21     NaN      NaN  197801     NaN      NaN\n",
       "21       21       21.0  22     NaN      NaN  197801     NaN      NaN\n",
       "22       22       22.0  23     NaN      NaN  197801     NaN      NaN\n",
       "23       23       23.0  24     NaN      NaN  197801     NaN      NaN\n",
       "24       24       24.0  25     NaN      NaN  197801     NaN      NaN\n",
       "25       25       25.0  26     NaN      NaN  197801     NaN      NaN\n",
       "26       26       26.0  27     NaN      NaN  197801     NaN      NaN\n",
       "27       27       27.0  28     NaN      NaN  197801     NaN      NaN\n",
       "28       28       28.0  29     NaN      NaN  197801     NaN      NaN\n",
       "29       29       29.0  30     NaN      NaN  197801     NaN      NaN"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Second pass: relink using IDPREV2 + DATEPR2 (for third interview connections)\n",
    "\n",
    "# Build lookup again from updated person_id list\n",
    "lookup = df[[\"person_id\", \"ID\", \"YYYYMM\"]].rename(columns={\n",
    "    \"ID\": \"IDPREV2_match\",\n",
    "    \"YYYYMM\": \"DATEPR2_match\",\n",
    "    \"person_id\": \"matched_person_id_2\"\n",
    "})\n",
    "\n",
    "# Merge using IDPREV2 + DATEPR2\n",
    "df = df.merge(\n",
    "    lookup,\n",
    "    how=\"left\",\n",
    "    left_on=[\"IDPREV2\", \"DATEPR2\"],\n",
    "    right_on=[\"IDPREV2_match\", \"DATEPR2_match\"]\n",
    ")\n",
    "\n",
    "# Fill in person_id if a match is found\n",
    "df[\"person_id\"] = df[\"matched_person_id_2\"].combine_first(df[\"person_id\"])\n",
    "\n",
    "# Drop temporary columns\n",
    "df.drop(columns=[\"IDPREV2_match\", \"DATEPR2_match\", \"matched_person_id_2\"], inplace=True)\n",
    "\n",
    "# Preview results\n",
    "df[[\"temp_id\", \"person_id\", \"ID\", \"IDPREV\", \"IDPREV2\", \"YYYYMM\", \"DATEPR\", \"DATEPR2\"]].head(30)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4edc273a-dbcb-47de-af7d-202613bd30e8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>person_id</th>\n",
       "      <th>temp_id</th>\n",
       "      <th>ID</th>\n",
       "      <th>IDPREV</th>\n",
       "      <th>IDPREV2</th>\n",
       "      <th>YYYYMM</th>\n",
       "      <th>DATEPR</th>\n",
       "      <th>DATEPR2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>33252</th>\n",
       "      <td>28856.0</td>\n",
       "      <td>33252</td>\n",
       "      <td>1001</td>\n",
       "      <td>106.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33253</th>\n",
       "      <td>28944.0</td>\n",
       "      <td>33253</td>\n",
       "      <td>1002</td>\n",
       "      <td>194.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33254</th>\n",
       "      <td>28941.0</td>\n",
       "      <td>33254</td>\n",
       "      <td>1003</td>\n",
       "      <td>191.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33255</th>\n",
       "      <td>28766.0</td>\n",
       "      <td>33255</td>\n",
       "      <td>1004</td>\n",
       "      <td>16.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33256</th>\n",
       "      <td>28800.0</td>\n",
       "      <td>33256</td>\n",
       "      <td>1005</td>\n",
       "      <td>50.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33257</th>\n",
       "      <td>28767.0</td>\n",
       "      <td>33257</td>\n",
       "      <td>1006</td>\n",
       "      <td>17.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33258</th>\n",
       "      <td>28909.0</td>\n",
       "      <td>33258</td>\n",
       "      <td>1007</td>\n",
       "      <td>159.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33259</th>\n",
       "      <td>28913.0</td>\n",
       "      <td>33259</td>\n",
       "      <td>1008</td>\n",
       "      <td>163.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33260</th>\n",
       "      <td>28917.0</td>\n",
       "      <td>33260</td>\n",
       "      <td>1009</td>\n",
       "      <td>167.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33261</th>\n",
       "      <td>28796.0</td>\n",
       "      <td>33261</td>\n",
       "      <td>1010</td>\n",
       "      <td>46.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33262</th>\n",
       "      <td>29026.0</td>\n",
       "      <td>33262</td>\n",
       "      <td>1011</td>\n",
       "      <td>276.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33263</th>\n",
       "      <td>29057.0</td>\n",
       "      <td>33263</td>\n",
       "      <td>1012</td>\n",
       "      <td>307.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33264</th>\n",
       "      <td>28958.0</td>\n",
       "      <td>33264</td>\n",
       "      <td>1013</td>\n",
       "      <td>208.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33265</th>\n",
       "      <td>28769.0</td>\n",
       "      <td>33265</td>\n",
       "      <td>1014</td>\n",
       "      <td>19.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33266</th>\n",
       "      <td>28926.0</td>\n",
       "      <td>33266</td>\n",
       "      <td>1015</td>\n",
       "      <td>176.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>198101</td>\n",
       "      <td>198007.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       person_id  temp_id    ID  IDPREV  IDPREV2  YYYYMM    DATEPR  DATEPR2\n",
       "33252    28856.0    33252  1001   106.0      NaN  198101  198007.0      NaN\n",
       "33253    28944.0    33253  1002   194.0      NaN  198101  198007.0      NaN\n",
       "33254    28941.0    33254  1003   191.0      NaN  198101  198007.0      NaN\n",
       "33255    28766.0    33255  1004    16.0      NaN  198101  198007.0      NaN\n",
       "33256    28800.0    33256  1005    50.0      NaN  198101  198007.0      NaN\n",
       "33257    28767.0    33257  1006    17.0      NaN  198101  198007.0      NaN\n",
       "33258    28909.0    33258  1007   159.0      NaN  198101  198007.0      NaN\n",
       "33259    28913.0    33259  1008   163.0      NaN  198101  198007.0      NaN\n",
       "33260    28917.0    33260  1009   167.0      NaN  198101  198007.0      NaN\n",
       "33261    28796.0    33261  1010    46.0      NaN  198101  198007.0      NaN\n",
       "33262    29026.0    33262  1011   276.0      NaN  198101  198007.0      NaN\n",
       "33263    29057.0    33263  1012   307.0      NaN  198101  198007.0      NaN\n",
       "33264    28958.0    33264  1013   208.0      NaN  198101  198007.0      NaN\n",
       "33265    28769.0    33265  1014    19.0      NaN  198101  198007.0      NaN\n",
       "33266    28926.0    33266  1015   176.0      NaN  198101  198007.0      NaN"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Find all rows where person_id ≠ temp_id (i.e., they were matched to a prior interview)\n",
    "linked = df[df['person_id'] != df['temp_id']].copy()\n",
    "\n",
    "# Display a few linked examples\n",
    "linked[[\"person_id\", \"temp_id\", \"ID\", \"IDPREV\", \"IDPREV2\", \"YYYYMM\", \"DATEPR\", \"DATEPR2\"]].head(15)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54f353c4-08dd-405f-b6aa-e4a1766d66a2",
   "metadata": {},
   "source": [
    "# Step 4: Iterative Linking Refinement and Panel Sample Size\n",
    "\n",
    "In this step, we:\n",
    "- Run a second linking pass to improve panel completeness.\n",
    "- Count how many unique respondents (`person_id`) appear in 2+ waves.\n",
    "- Report the share of total observations\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2201f1b9-bbb9-4aec-a2ed-60c60bd412e7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total interviews: 330,503\n",
      "Interviews part of a panel (2+ waves): 229,527\n",
      "Panel share of sample: 69.45%\n"
     ]
    }
   ],
   "source": [
    "# ========== 4a. Second pass: relink using IDPREV and DATEPR again ==========\n",
    "lookup = df[[\"person_id\", \"ID\", \"YYYYMM\"]].rename(columns={\n",
    "    \"ID\": \"IDPREV_match\",\n",
    "    \"YYYYMM\": \"DATEPR_match\",\n",
    "    \"person_id\": \"matched_person_id_pass2\"\n",
    "})\n",
    "df = df.merge(\n",
    "    lookup,\n",
    "    how=\"left\",\n",
    "    left_on=[\"IDPREV\", \"DATEPR\"],\n",
    "    right_on=[\"IDPREV_match\", \"DATEPR_match\"]\n",
    ")\n",
    "df[\"person_id\"] = df[\"matched_person_id_pass2\"].combine_first(df[\"person_id\"])\n",
    "df.drop(columns=[\"IDPREV_match\", \"DATEPR_match\", \"matched_person_id_pass2\"], inplace=True)\n",
    "\n",
    "# ========== 4b. Second pass: relink using IDPREV2 and DATEPR2 ==========\n",
    "lookup = df[[\"person_id\", \"ID\", \"YYYYMM\"]].rename(columns={\n",
    "    \"ID\": \"IDPREV2_match\",\n",
    "    \"YYYYMM\": \"DATEPR2_match\",\n",
    "    \"person_id\": \"matched_person_id_pass2b\"\n",
    "})\n",
    "df = df.merge(\n",
    "    lookup,\n",
    "    how=\"left\",\n",
    "    left_on=[\"IDPREV2\", \"DATEPR2\"],\n",
    "    right_on=[\"IDPREV2_match\", \"DATEPR2_match\"]\n",
    ")\n",
    "df[\"person_id\"] = df[\"matched_person_id_pass2b\"].combine_first(df[\"person_id\"])\n",
    "df.drop(columns=[\"IDPREV2_match\", \"DATEPR2_match\", \"matched_person_id_pass2b\"], inplace=True)\n",
    "\n",
    "# ========== 4c. Sample size checks ==========\n",
    "# Count number of interviews per person\n",
    "person_counts = df[\"person_id\"].value_counts()\n",
    "\n",
    "# How many are panel (2+ waves)?\n",
    "panel_ids = person_counts[person_counts > 1].index\n",
    "num_panel_obs = df[df[\"person_id\"].isin(panel_ids)].shape[0]\n",
    "num_total_obs = df.shape[0]\n",
    "\n",
    "# Percent of sample that is panel\n",
    "panel_share = num_panel_obs / num_total_obs * 100\n",
    "\n",
    "print(f\"Total interviews: {num_total_obs:,}\")\n",
    "print(f\"Interviews part of a panel (2+ waves): {num_panel_obs:,}\")\n",
    "print(f\"Panel share of sample: {panel_share:.2f}%\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d0c88be5-50e7-469b-88cc-1e76bc9ce46b",
   "metadata": {},
   "source": [
    "# Step 5: Split and Save Datasets for Cross-Section and Panel Analysis\n",
    "\n",
    "Now that we have successfully constructed the `person_id` linking variable, we save two distinct versions of our dataset:\n",
    "\n",
    "- `msc_cross_section.csv`: includes all interviews (cross-sectional structure, including one-time respondents). Used for pooled OLS or time fixed effects models (e.g., Table 1 columns 1 and 2).\n",
    "- `msc_panel_only.csv`: includes only respondents who appear in two or more survey waves. Used for consumer fixed effects models (e.g., Table 1 columns 3 and 4).\n",
    "\n",
    "We also document all columns in the data dictionary below.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7c99e2ce-d8f2-489f-a99a-1b26b59cf99c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "✅ Saved:\n",
      "- msc_cross_section.csv (all observations)\n",
      "- msc_panel_only.csv (panel sample only)\n"
     ]
    }
   ],
   "source": [
    "# 5a. Create datasets\n",
    "df_cross = df.copy()  # Full sample: all respondents\n",
    "df_panel = df[df[\"person_id\"].isin(panel_ids)].copy()  # Only panel respondents (2+ interviews)\n",
    "\n",
    "# 5b. Save to CSV\n",
    "df_cross.to_csv(\"msc_cross_section.csv\", index=False)\n",
    "df_panel.to_csv(\"msc_panel_only.csv\", index=False)\n",
    "\n",
    "print(\"✅ Saved:\")\n",
    "print(\"- msc_cross_section.csv (all observations)\")\n",
    "print(\"- msc_panel_only.csv (panel sample only)\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2b10db38-ff10-484c-b488-f86d827f1a68",
   "metadata": {},
   "source": [
    "# Data Dictionary: Cleaned MSC Datasets\n",
    "\n",
    "| Column       | Description |\n",
    "|--------------|-------------|\n",
    "| `CASEID`     | Unique identifier for each interview (not person-specific) |\n",
    "| `YYYYMM`     | Survey year and month (e.g., 198101 = Jan 1981) |\n",
    "| `ID`         | Interview ID for this month (resets monthly) |\n",
    "| `IDPREV`     | Interview ID from previous wave (if reinterviewed a second time) |\n",
    "| `DATEPR`     | YYYYMM of previous interview |\n",
    "| `IDPREV2`    | ID from first interview (if reinterviewed a third time) |\n",
    "| `DATEPR2`    | YYYYMM of first interview |\n",
    "| `PX1Q2`      | Expected inflation over next 12 months (numeric, capped at 95%) |\n",
    "| `UNEMP`      | Expected unemployment: 1 = more, 3 = same, 5 = less, 8/9 = missing |\n",
    "| `D_more`     | Dummy for UNEMP = 1 (expects more unemployment) |\n",
    "| `D_less`     | Dummy for UNEMP = 5 (expects less unemployment) |\n",
    "| `WT_HH`      | Household weight (object, may need to be numeric) |\n",
    "| `person_id`  | Constructed individual ID across time (for panel analysis) |\n",
    "| `temp_id`    | Original row index used for tracking and linking |\n",
    "\n",
    "All missing or top-coded values have been cleaned, and inflation expectations >95% were capped. All linking variables are numeric. The dataset is now suitable for both cross-sectional and panel analysis.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "572ddd9c-1954-4c52-bdb4-9aeb92192829",
   "metadata": {},
   "source": [
    "# Step 6: Regressions (1) and (2) — Inflation Expectations vs. Unemployment Sentiment\n",
    "\n",
    "We now estimate columns (1) and (2) of Table 1 from the MSC paper.\n",
    "\n",
    "- **Column (1):** Pooled OLS without time fixed effects\n",
    "- **Column (2):** Adds time fixed effects (`YYYYMM`) to control for aggregate shocks\n",
    "\n",
    "The dependent variable is `PX1Q2` — the respondent's expected inflation over the next 12 months. The key independent variables are:\n",
    "\n",
    "- `D_more`: 1 if the respondent expects *more* unemployment\n",
    "- `D_less`: 1 if the respondent expects *less* unemployment\n",
    "- Reference category is expecting unemployment to remain *about the same*\n",
    "\n",
    "We use robust standard errors (HC1) to match the original table.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "aa3a22b6-63f4-4253-b19f-54cecbbd3fcc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "=== Regression (1): Pooled OLS ===\n",
      "==============================================================================\n",
      "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "Intercept      5.3879      0.016    337.490      0.000       5.357       5.419\n",
      "D_more         1.9373      0.030     65.222      0.000       1.879       1.995\n",
      "D_less        -0.2020      0.032     -6.409      0.000      -0.264      -0.140\n",
      "==============================================================================\n",
      "\n",
      "=== Regression (2): Time Fixed Effects ===\n",
      "=======================================================================================\n",
      "                          coef    std err          z      P>|z|      [0.025      0.975]\n",
      "---------------------------------------------------------------------------------------\n",
      "Intercept               6.5600      0.263     24.908      0.000       6.044       7.076\n",
      "C(YYYYMM)[T.197802]     1.9175      0.368      5.207      0.000       1.196       2.639\n",
      "C(YYYYMM)[T.197803]     0.9843      0.412      2.387      0.017       0.176       1.792\n",
      "C(YYYYMM)[T.197804]     0.8459      0.380      2.228      0.026       0.102       1.590\n",
      "C(YYYYMM)[T.197805]     2.1883      0.369      5.923      0.000       1.464       2.913\n",
      "C(YYYYMM)[T.197806]     1.9236      0.435      4.422      0.000       1.071       2.776\n",
      "C(YYYYMM)[T.197807]     1.2685      0.395      3.211      0.001       0.494       2.043\n",
      "C(YYYYMM)[T.197808]     2.8468      0.362      7.861      0.000       2.137       3.557\n",
      "C(YYYYMM)[T.197809]     1.6836      0.418      4.027      0.000       0.864       2.503\n",
      "C(YYYYMM)[T.197810]     1.3283      0.383      3.470      0.001       0.578       2.079\n",
      "C(YYYYMM)[T.197811]     2.0750      0.340      6.098      0.000       1.408       2.742\n",
      "C(YYYYMM)[T.197812]     1.5742      0.419      3.757      0.000       0.753       2.395\n",
      "C(YYYYMM)[T.197901]     2.3260      0.381      6.100      0.000       1.579       3.073\n",
      "C(YYYYMM)[T.197902]     3.9445      0.374     10.541      0.000       3.211       4.678\n",
      "C(YYYYMM)[T.197903]     3.1379      0.433      7.254      0.000       2.290       3.986\n",
      "C(YYYYMM)[T.197904]     3.5387      0.401      8.827      0.000       2.753       4.324\n",
      "C(YYYYMM)[T.197905]     5.3997      0.404     13.366      0.000       4.608       6.192\n",
      "C(YYYYMM)[T.197906]     5.7167      0.446     12.812      0.000       4.842       6.591\n",
      "C(YYYYMM)[T.197907]     5.2810      0.409     12.925      0.000       4.480       6.082\n",
      "C(YYYYMM)[T.197908]     4.8236      0.403     11.962      0.000       4.033       5.614\n",
      "C(YYYYMM)[T.197909]     3.8588      0.429      9.005      0.000       3.019       4.699\n",
      "C(YYYYMM)[T.197910]     2.7267      0.368      7.400      0.000       2.004       3.449\n",
      "C(YYYYMM)[T.197911]     5.5500      0.403     13.780      0.000       4.761       6.339\n",
      "C(YYYYMM)[T.197912]     4.7055      0.441     10.680      0.000       3.842       5.569\n",
      "C(YYYYMM)[T.198001]     6.5557      0.506     12.960      0.000       5.564       7.547\n",
      "C(YYYYMM)[T.198002]     4.3787      0.385     11.362      0.000       3.623       5.134\n",
      "C(YYYYMM)[T.198003]     6.5489      0.494     13.248      0.000       5.580       7.518\n",
      "C(YYYYMM)[T.198004]     5.8914      0.489     12.051      0.000       4.933       6.850\n",
      "C(YYYYMM)[T.198005]     4.5476      0.497      9.157      0.000       3.574       5.521\n",
      "C(YYYYMM)[T.198006]     4.0904      0.501      8.158      0.000       3.108       5.073\n",
      "C(YYYYMM)[T.198007]     4.1267      0.504      8.185      0.000       3.139       5.115\n",
      "C(YYYYMM)[T.198008]     3.1321      0.471      6.648      0.000       2.209       4.055\n",
      "C(YYYYMM)[T.198009]     3.1678      0.428      7.396      0.000       2.328       4.007\n",
      "C(YYYYMM)[T.198010]     4.6863      0.504      9.306      0.000       3.699       5.673\n",
      "C(YYYYMM)[T.198011]     4.4112      0.509      8.671      0.000       3.414       5.408\n",
      "C(YYYYMM)[T.198012]     5.0728      0.508      9.995      0.000       4.078       6.068\n",
      "C(YYYYMM)[T.198101]     3.4314      0.441      7.776      0.000       2.567       4.296\n",
      "C(YYYYMM)[T.198102]     3.4337      0.475      7.235      0.000       2.504       4.364\n",
      "C(YYYYMM)[T.198103]     2.4804      0.422      5.876      0.000       1.653       3.308\n",
      "C(YYYYMM)[T.198104]     4.0755      0.499      8.161      0.000       3.097       5.054\n",
      "C(YYYYMM)[T.198105]     3.3390      0.478      6.979      0.000       2.401       4.277\n",
      "C(YYYYMM)[T.198106]     2.4554      0.430      5.704      0.000       1.612       3.299\n",
      "C(YYYYMM)[T.198107]     2.4681      0.460      5.364      0.000       1.566       3.370\n",
      "C(YYYYMM)[T.198108]     2.5161      0.450      5.586      0.000       1.633       3.399\n",
      "C(YYYYMM)[T.198109]     3.3639      0.510      6.602      0.000       2.365       4.363\n",
      "C(YYYYMM)[T.198110]     2.4374      0.429      5.676      0.000       1.596       3.279\n",
      "C(YYYYMM)[T.198111]     2.5303      0.446      5.668      0.000       1.655       3.405\n",
      "C(YYYYMM)[T.198112]     1.7821      0.440      4.049      0.000       0.919       2.645\n",
      "C(YYYYMM)[T.198201]     1.8223      0.475      3.835      0.000       0.891       2.754\n",
      "C(YYYYMM)[T.198202]     1.7139      0.456      3.762      0.000       0.821       2.607\n",
      "C(YYYYMM)[T.198203]     1.3611      0.468      2.909      0.004       0.444       2.278\n",
      "C(YYYYMM)[T.198204]     1.0704      0.411      2.606      0.009       0.265       1.875\n",
      "C(YYYYMM)[T.198205]     0.9316      0.446      2.090      0.037       0.058       1.805\n",
      "C(YYYYMM)[T.198206]     1.2066      0.443      2.724      0.006       0.338       2.075\n",
      "C(YYYYMM)[T.198207]     0.8512      0.426      1.996      0.046       0.015       1.687\n",
      "C(YYYYMM)[T.198208]     0.9934      0.410      2.424      0.015       0.190       1.797\n",
      "C(YYYYMM)[T.198209]     0.5588      0.427      1.309      0.191      -0.278       1.396\n",
      "C(YYYYMM)[T.198210]     1.8761      0.462      4.058      0.000       0.970       2.782\n",
      "C(YYYYMM)[T.198211]     1.1623      0.414      2.810      0.005       0.352       1.973\n",
      "C(YYYYMM)[T.198212]     1.1531      0.445      2.590      0.010       0.281       2.026\n",
      "C(YYYYMM)[T.198301]     0.6450      0.497      1.298      0.194      -0.329       1.619\n",
      "C(YYYYMM)[T.198302]     0.4561      0.436      1.046      0.295      -0.398       1.310\n",
      "C(YYYYMM)[T.198303]    -0.3316      0.393     -0.844      0.398      -1.101       0.438\n",
      "C(YYYYMM)[T.198304]     0.1468      0.411      0.357      0.721      -0.659       0.952\n",
      "C(YYYYMM)[T.198305]     0.4086      0.433      0.943      0.346      -0.440       1.257\n",
      "C(YYYYMM)[T.198306]     0.0989      0.395      0.250      0.803      -0.676       0.874\n",
      "C(YYYYMM)[T.198307]    -0.2012      0.400     -0.503      0.615      -0.985       0.583\n",
      "C(YYYYMM)[T.198308]    -0.0618      0.418     -0.148      0.883      -0.881       0.758\n",
      "C(YYYYMM)[T.198309]     0.1627      0.417      0.390      0.696      -0.654       0.980\n",
      "C(YYYYMM)[T.198310]     0.6914      0.417      1.659      0.097      -0.125       1.508\n",
      "C(YYYYMM)[T.198311]     0.4015      0.433      0.927      0.354      -0.448       1.251\n",
      "C(YYYYMM)[T.198312]     0.2755      0.416      0.662      0.508      -0.540       1.092\n",
      "C(YYYYMM)[T.198401]    -0.5095      0.401     -1.270      0.204      -1.296       0.277\n",
      "C(YYYYMM)[T.198402]    -0.0680      0.427     -0.159      0.873      -0.905       0.769\n",
      "C(YYYYMM)[T.198403]    -0.2498      0.407     -0.614      0.540      -1.048       0.548\n",
      "C(YYYYMM)[T.198404]     0.3880      0.417      0.931      0.352      -0.429       1.205\n",
      "C(YYYYMM)[T.198405]     0.1700      0.425      0.400      0.689      -0.663       1.003\n",
      "C(YYYYMM)[T.198406]    -0.7203      0.358     -2.013      0.044      -1.421      -0.019\n",
      "C(YYYYMM)[T.198407]    -0.7994      0.382     -2.092      0.036      -1.548      -0.051\n",
      "C(YYYYMM)[T.198408]    -0.6886      0.413     -1.669      0.095      -1.498       0.120\n",
      "C(YYYYMM)[T.198409]    -0.9651      0.391     -2.467      0.014      -1.732      -0.198\n",
      "C(YYYYMM)[T.198410]    -0.3759      0.401     -0.939      0.348      -1.161       0.409\n",
      "C(YYYYMM)[T.198411]    -0.1306      0.407     -0.321      0.748      -0.928       0.666\n",
      "C(YYYYMM)[T.198412]    -0.2822      0.408     -0.692      0.489      -1.081       0.517\n",
      "C(YYYYMM)[T.198501]    -1.1713      0.394     -2.973      0.003      -1.943      -0.399\n",
      "C(YYYYMM)[T.198502]    -0.9204      0.403     -2.282      0.023      -1.711      -0.130\n",
      "C(YYYYMM)[T.198503]    -1.0929      0.390     -2.804      0.005      -1.857      -0.329\n",
      "C(YYYYMM)[T.198504]    -0.7888      0.379     -2.083      0.037      -1.531      -0.047\n",
      "C(YYYYMM)[T.198505]    -0.8958      0.405     -2.213      0.027      -1.689      -0.102\n",
      "C(YYYYMM)[T.198506]    -0.7475      0.389     -1.922      0.055      -1.510       0.015\n",
      "C(YYYYMM)[T.198507]    -1.6573      0.400     -4.148      0.000      -2.440      -0.874\n",
      "C(YYYYMM)[T.198508]    -1.9434      0.345     -5.631      0.000      -2.620      -1.267\n",
      "C(YYYYMM)[T.198509]    -1.1288      0.395     -2.861      0.004      -1.902      -0.356\n",
      "C(YYYYMM)[T.198510]    -0.7390      0.399     -1.852      0.064      -1.521       0.043\n",
      "C(YYYYMM)[T.198511]    -0.7509      0.415     -1.808      0.071      -1.565       0.063\n",
      "C(YYYYMM)[T.198512]    -0.3411      0.412     -0.827      0.408      -1.149       0.467\n",
      "C(YYYYMM)[T.198601]    -1.5167      0.389     -3.901      0.000      -2.279      -0.755\n",
      "C(YYYYMM)[T.198602]    -1.6433      0.378     -4.351      0.000      -2.384      -0.903\n",
      "C(YYYYMM)[T.198603]    -1.2614      0.406     -3.105      0.002      -2.057      -0.465\n",
      "C(YYYYMM)[T.198604]    -1.2972      0.409     -3.173      0.002      -2.099      -0.496\n",
      "C(YYYYMM)[T.198605]    -1.4017      0.409     -3.430      0.001      -2.203      -0.601\n",
      "C(YYYYMM)[T.198606]    -1.6376      0.347     -4.713      0.000      -2.319      -0.957\n",
      "C(YYYYMM)[T.198607]    -1.5396      0.383     -4.020      0.000      -2.290      -0.789\n",
      "C(YYYYMM)[T.198608]    -1.5025      0.386     -3.895      0.000      -2.259      -0.746\n",
      "C(YYYYMM)[T.198609]    -2.2867      0.330     -6.927      0.000      -2.934      -1.640\n",
      "C(YYYYMM)[T.198610]    -1.9448      0.330     -5.890      0.000      -2.592      -1.298\n",
      "C(YYYYMM)[T.198611]    -1.7785      0.392     -4.535      0.000      -2.547      -1.010\n",
      "C(YYYYMM)[T.198612]    -1.8159      0.367     -4.949      0.000      -2.535      -1.097\n",
      "C(YYYYMM)[T.198701]    -2.0242      0.358     -5.660      0.000      -2.725      -1.323\n",
      "C(YYYYMM)[T.198702]    -1.4612      0.376     -3.884      0.000      -2.199      -0.724\n",
      "C(YYYYMM)[T.198703]    -1.9628      0.335     -5.853      0.000      -2.620      -1.306\n",
      "C(YYYYMM)[T.198704]    -1.9602      0.355     -5.527      0.000      -2.655      -1.265\n",
      "C(YYYYMM)[T.198705]    -1.8299      0.356     -5.145      0.000      -2.527      -1.133\n",
      "C(YYYYMM)[T.198706]    -1.8369      0.336     -5.465      0.000      -2.496      -1.178\n",
      "C(YYYYMM)[T.198707]    -1.9563      0.346     -5.648      0.000      -2.635      -1.277\n",
      "C(YYYYMM)[T.198708]    -1.7551      0.347     -5.056      0.000      -2.435      -1.075\n",
      "C(YYYYMM)[T.198709]    -1.7327      0.379     -4.571      0.000      -2.476      -0.990\n",
      "C(YYYYMM)[T.198710]    -1.8189      0.361     -5.042      0.000      -2.526      -1.112\n",
      "C(YYYYMM)[T.198711]    -1.5432      0.392     -3.934      0.000      -2.312      -0.774\n",
      "C(YYYYMM)[T.198712]    -1.7468      0.389     -4.493      0.000      -2.509      -0.985\n",
      "C(YYYYMM)[T.198801]    -1.2658      0.392     -3.226      0.001      -2.035      -0.497\n",
      "C(YYYYMM)[T.198802]    -1.1374      0.442     -2.575      0.010      -2.003      -0.272\n",
      "C(YYYYMM)[T.198803]    -1.7707      0.383     -4.620      0.000      -2.522      -1.019\n",
      "C(YYYYMM)[T.198804]    -1.5394      0.384     -4.008      0.000      -2.292      -0.787\n",
      "C(YYYYMM)[T.198805]    -1.0865      0.422     -2.573      0.010      -1.914      -0.259\n",
      "C(YYYYMM)[T.198806]    -0.9930      0.431     -2.302      0.021      -1.839      -0.147\n",
      "C(YYYYMM)[T.198807]    -0.6806      0.406     -1.676      0.094      -1.476       0.115\n",
      "C(YYYYMM)[T.198808]    -0.7571      0.417     -1.817      0.069      -1.574       0.060\n",
      "C(YYYYMM)[T.198809]    -1.0204      0.440     -2.320      0.020      -1.883      -0.158\n",
      "C(YYYYMM)[T.198810]    -0.9302      0.413     -2.254      0.024      -1.739      -0.121\n",
      "C(YYYYMM)[T.198811]    -0.8242      0.439     -1.879      0.060      -1.684       0.035\n",
      "C(YYYYMM)[T.198812]    -1.3681      0.374     -3.659      0.000      -2.101      -0.635\n",
      "C(YYYYMM)[T.198901]    -1.5558      0.388     -4.006      0.000      -2.317      -0.795\n",
      "C(YYYYMM)[T.198902]    -1.3086      0.395     -3.312      0.001      -2.083      -0.534\n",
      "C(YYYYMM)[T.198903]    -1.0652      0.429     -2.482      0.013      -1.906      -0.224\n",
      "C(YYYYMM)[T.198904]    -1.3651      0.355     -3.844      0.000      -2.061      -0.669\n",
      "C(YYYYMM)[T.198905]    -0.6020      0.434     -1.387      0.166      -1.453       0.249\n",
      "C(YYYYMM)[T.198906]    -1.4217      0.369     -3.857      0.000      -2.144      -0.699\n",
      "C(YYYYMM)[T.198907]    -1.3280      0.411     -3.234      0.001      -2.133      -0.523\n",
      "C(YYYYMM)[T.198908]    -1.8578      0.402     -4.619      0.000      -2.646      -1.070\n",
      "C(YYYYMM)[T.198909]    -1.5507      0.404     -3.838      0.000      -2.343      -0.759\n",
      "C(YYYYMM)[T.198910]    -1.6957      0.376     -4.513      0.000      -2.432      -0.959\n",
      "C(YYYYMM)[T.198911]    -1.5236      0.387     -3.936      0.000      -2.282      -0.765\n",
      "C(YYYYMM)[T.198912]    -1.8431      0.362     -5.095      0.000      -2.552      -1.134\n",
      "C(YYYYMM)[T.199001]    -1.0189      0.441     -2.313      0.021      -1.882      -0.155\n",
      "C(YYYYMM)[T.199002]    -1.0272      0.431     -2.385      0.017      -1.871      -0.183\n",
      "C(YYYYMM)[T.199003]    -1.5145      0.383     -3.958      0.000      -2.264      -0.765\n",
      "C(YYYYMM)[T.199004]    -1.8430      0.369     -4.988      0.000      -2.567      -1.119\n",
      "C(YYYYMM)[T.199005]    -1.9926      0.371     -5.370      0.000      -2.720      -1.265\n",
      "C(YYYYMM)[T.199006]    -1.8779      0.379     -4.959      0.000      -2.620      -1.136\n",
      "C(YYYYMM)[T.199007]    -1.8697      0.356     -5.259      0.000      -2.567      -1.173\n",
      "C(YYYYMM)[T.199008]    -0.7362      0.414     -1.778      0.075      -1.548       0.076\n",
      "C(YYYYMM)[T.199009]    -0.6357      0.410     -1.552      0.121      -1.439       0.167\n",
      "C(YYYYMM)[T.199010]    -0.5949      0.403     -1.476      0.140      -1.385       0.195\n",
      "C(YYYYMM)[T.199011]    -0.6888      0.400     -1.724      0.085      -1.472       0.094\n",
      "C(YYYYMM)[T.199012]    -0.5417      0.421     -1.288      0.198      -1.366       0.282\n",
      "C(YYYYMM)[T.199101]    -0.5190      0.412     -1.260      0.208      -1.326       0.288\n",
      "C(YYYYMM)[T.199102]    -0.6118      0.441     -1.387      0.166      -1.477       0.253\n",
      "C(YYYYMM)[T.199103]    -0.8527      0.425     -2.005      0.045      -1.686      -0.019\n",
      "C(YYYYMM)[T.199104]    -0.8424      0.431     -1.956      0.050      -1.686       0.002\n",
      "C(YYYYMM)[T.199105]    -0.9178      0.445     -2.063      0.039      -1.790      -0.046\n",
      "C(YYYYMM)[T.199106]    -1.3513      0.424     -3.188      0.001      -2.182      -0.520\n",
      "C(YYYYMM)[T.199107]    -1.8299      0.369     -4.964      0.000      -2.552      -1.107\n",
      "C(YYYYMM)[T.199108]    -1.6782      0.410     -4.098      0.000      -2.481      -0.876\n",
      "C(YYYYMM)[T.199109]    -2.0751      0.356     -5.829      0.000      -2.773      -1.377\n",
      "C(YYYYMM)[T.199110]    -1.2668      0.450     -2.818      0.005      -2.148      -0.386\n",
      "C(YYYYMM)[T.199111]    -1.1014      0.454     -2.426      0.015      -1.991      -0.212\n",
      "C(YYYYMM)[T.199112]    -0.8668      0.477     -1.818      0.069      -1.802       0.068\n",
      "C(YYYYMM)[T.199201]    -0.9993      0.445     -2.243      0.025      -1.872      -0.126\n",
      "C(YYYYMM)[T.199202]    -1.4972      0.467     -3.206      0.001      -2.413      -0.582\n",
      "C(YYYYMM)[T.199203]    -1.7392      0.382     -4.554      0.000      -2.488      -0.991\n",
      "C(YYYYMM)[T.199204]    -1.5922      0.402     -3.964      0.000      -2.379      -0.805\n",
      "C(YYYYMM)[T.199205]    -1.7511      0.374     -4.679      0.000      -2.485      -1.018\n",
      "C(YYYYMM)[T.199206]    -1.6529      0.392     -4.221      0.000      -2.420      -0.885\n",
      "C(YYYYMM)[T.199207]    -1.7426      0.426     -4.087      0.000      -2.578      -0.907\n",
      "C(YYYYMM)[T.199208]    -1.4889      0.410     -3.630      0.000      -2.293      -0.685\n",
      "C(YYYYMM)[T.199209]    -1.6073      0.401     -4.007      0.000      -2.394      -0.821\n",
      "C(YYYYMM)[T.199210]    -1.7071      0.410     -4.161      0.000      -2.511      -0.903\n",
      "C(YYYYMM)[T.199211]    -1.1723      0.457     -2.563      0.010      -2.069      -0.276\n",
      "C(YYYYMM)[T.199212]    -2.0741      0.348     -5.962      0.000      -2.756      -1.392\n",
      "C(YYYYMM)[T.199301]    -2.2191      0.330     -6.718      0.000      -2.867      -1.572\n",
      "C(YYYYMM)[T.199302]    -0.9376      0.468     -2.005      0.045      -1.854      -0.021\n",
      "C(YYYYMM)[T.199303]    -0.6898      0.473     -1.458      0.145      -1.617       0.238\n",
      "C(YYYYMM)[T.199304]    -1.3630      0.441     -3.091      0.002      -2.227      -0.499\n",
      "C(YYYYMM)[T.199305]    -1.5209      0.421     -3.610      0.000      -2.347      -0.695\n",
      "C(YYYYMM)[T.199306]    -1.5021      0.430     -3.490      0.000      -2.346      -0.658\n",
      "C(YYYYMM)[T.199307]    -1.8577      0.414     -4.482      0.000      -2.670      -1.045\n",
      "C(YYYYMM)[T.199308]    -1.2585      0.444     -2.835      0.005      -2.128      -0.389\n",
      "C(YYYYMM)[T.199309]    -1.3155      0.456     -2.885      0.004      -2.209      -0.422\n",
      "C(YYYYMM)[T.199310]    -1.7310      0.415     -4.170      0.000      -2.545      -0.917\n",
      "C(YYYYMM)[T.199311]    -2.3186      0.360     -6.434      0.000      -3.025      -1.612\n",
      "C(YYYYMM)[T.199312]    -2.1731      0.360     -6.040      0.000      -2.878      -1.468\n",
      "C(YYYYMM)[T.199401]    -1.9590      0.378     -5.180      0.000      -2.700      -1.218\n",
      "C(YYYYMM)[T.199402]    -2.0762      0.399     -5.202      0.000      -2.858      -1.294\n",
      "C(YYYYMM)[T.199403]    -1.9560      0.390     -5.013      0.000      -2.721      -1.191\n",
      "C(YYYYMM)[T.199404]    -1.7418      0.436     -3.999      0.000      -2.596      -0.888\n",
      "C(YYYYMM)[T.199405]    -1.9404      0.392     -4.953      0.000      -2.708      -1.173\n",
      "C(YYYYMM)[T.199406]    -1.9479      0.410     -4.757      0.000      -2.751      -1.145\n",
      "C(YYYYMM)[T.199407]    -1.4026      0.434     -3.235      0.001      -2.252      -0.553\n",
      "C(YYYYMM)[T.199408]    -1.5576      0.393     -3.968      0.000      -2.327      -0.788\n",
      "C(YYYYMM)[T.199409]    -1.7109      0.391     -4.370      0.000      -2.478      -0.944\n",
      "C(YYYYMM)[T.199410]    -2.2932      0.368     -6.234      0.000      -3.014      -1.572\n",
      "C(YYYYMM)[T.199411]    -1.4751      0.419     -3.525      0.000      -2.295      -0.655\n",
      "C(YYYYMM)[T.199412]    -2.0762      0.376     -5.525      0.000      -2.813      -1.340\n",
      "C(YYYYMM)[T.199501]    -2.3380      0.345     -6.780      0.000      -3.014      -1.662\n",
      "C(YYYYMM)[T.199502]    -2.3188      0.365     -6.355      0.000      -3.034      -1.604\n",
      "C(YYYYMM)[T.199503]    -1.8692      0.386     -4.840      0.000      -2.626      -1.112\n",
      "C(YYYYMM)[T.199504]    -1.9319      0.369     -5.237      0.000      -2.655      -1.209\n",
      "C(YYYYMM)[T.199505]    -1.6446      0.405     -4.061      0.000      -2.438      -0.851\n",
      "C(YYYYMM)[T.199506]    -1.9581      0.390     -5.022      0.000      -2.722      -1.194\n",
      "C(YYYYMM)[T.199507]    -2.4587      0.356     -6.898      0.000      -3.157      -1.760\n",
      "C(YYYYMM)[T.199508]    -2.2387      0.376     -5.958      0.000      -2.975      -1.502\n",
      "C(YYYYMM)[T.199509]    -2.4242      0.366     -6.619      0.000      -3.142      -1.706\n",
      "C(YYYYMM)[T.199510]    -2.8673      0.339     -8.462      0.000      -3.531      -2.203\n",
      "C(YYYYMM)[T.199511]    -2.2602      0.389     -5.814      0.000      -3.022      -1.498\n",
      "C(YYYYMM)[T.199512]    -2.8941      0.322     -8.977      0.000      -3.526      -2.262\n",
      "C(YYYYMM)[T.199601]    -2.2998      0.395     -5.820      0.000      -3.074      -1.525\n",
      "C(YYYYMM)[T.199602]    -2.2168      0.383     -5.793      0.000      -2.967      -1.467\n",
      "C(YYYYMM)[T.199603]    -2.1202      0.387     -5.483      0.000      -2.878      -1.362\n",
      "C(YYYYMM)[T.199604]    -1.8420      0.434     -4.248      0.000      -2.692      -0.992\n",
      "C(YYYYMM)[T.199605]    -1.0377      0.458     -2.263      0.024      -1.936      -0.139\n",
      "C(YYYYMM)[T.199606]    -2.1173      0.422     -5.015      0.000      -2.945      -1.290\n",
      "C(YYYYMM)[T.199607]    -1.9416      0.401     -4.845      0.000      -2.727      -1.156\n",
      "C(YYYYMM)[T.199608]    -2.0716      0.375     -5.521      0.000      -2.807      -1.336\n",
      "C(YYYYMM)[T.199609]    -2.0888      0.379     -5.510      0.000      -2.832      -1.346\n",
      "C(YYYYMM)[T.199610]    -1.9271      0.393     -4.899      0.000      -2.698      -1.156\n",
      "C(YYYYMM)[T.199611]    -2.2611      0.365     -6.190      0.000      -2.977      -1.545\n",
      "C(YYYYMM)[T.199612]    -2.3125      0.361     -6.401      0.000      -3.021      -1.604\n",
      "C(YYYYMM)[T.199701]    -2.3507      0.383     -6.137      0.000      -3.101      -1.600\n",
      "C(YYYYMM)[T.199702]    -2.6559      0.321     -8.279      0.000      -3.285      -2.027\n",
      "C(YYYYMM)[T.199703]    -2.7155      0.331     -8.212      0.000      -3.364      -2.067\n",
      "C(YYYYMM)[T.199704]    -2.6548      0.323     -8.211      0.000      -3.289      -2.021\n",
      "C(YYYYMM)[T.199705]    -2.4204      0.340     -7.121      0.000      -3.087      -1.754\n",
      "C(YYYYMM)[T.199706]    -2.4870      0.336     -7.401      0.000      -3.146      -1.828\n",
      "C(YYYYMM)[T.199707]    -2.8491      0.322     -8.846      0.000      -3.480      -2.218\n",
      "C(YYYYMM)[T.199708]    -2.9053      0.326     -8.916      0.000      -3.544      -2.267\n",
      "C(YYYYMM)[T.199709]    -2.8056      0.315     -8.903      0.000      -3.423      -2.188\n",
      "C(YYYYMM)[T.199710]    -2.8862      0.310     -9.312      0.000      -3.494      -2.279\n",
      "C(YYYYMM)[T.199711]    -2.9000      0.312     -9.288      0.000      -3.512      -2.288\n",
      "C(YYYYMM)[T.199712]    -2.5139      0.330     -7.608      0.000      -3.162      -1.866\n",
      "C(YYYYMM)[T.199801]    -2.6578      0.332     -7.996      0.000      -3.309      -2.006\n",
      "C(YYYYMM)[T.199802]    -3.1494      0.304    -10.351      0.000      -3.746      -2.553\n",
      "C(YYYYMM)[T.199803]    -2.9816      0.306     -9.732      0.000      -3.582      -2.381\n",
      "C(YYYYMM)[T.199804]    -3.1899      0.297    -10.751      0.000      -3.771      -2.608\n",
      "C(YYYYMM)[T.199805]    -2.9289      0.305     -9.608      0.000      -3.526      -2.331\n",
      "C(YYYYMM)[T.199806]    -2.9718      0.304     -9.775      0.000      -3.568      -2.376\n",
      "C(YYYYMM)[T.199807]    -3.1431      0.303    -10.381      0.000      -3.737      -2.550\n",
      "C(YYYYMM)[T.199808]    -3.2966      0.298    -11.065      0.000      -3.881      -2.713\n",
      "C(YYYYMM)[T.199809]    -3.0462      0.304    -10.010      0.000      -3.643      -2.450\n",
      "C(YYYYMM)[T.199810]    -3.2284      0.300    -10.772      0.000      -3.816      -2.641\n",
      "C(YYYYMM)[T.199811]    -3.0564      0.309     -9.885      0.000      -3.662      -2.450\n",
      "C(YYYYMM)[T.199812]    -3.1797      0.300    -10.584      0.000      -3.769      -2.591\n",
      "C(YYYYMM)[T.199901]    -3.1943      0.297    -10.743      0.000      -3.777      -2.611\n",
      "C(YYYYMM)[T.199902]    -3.2357      0.299    -10.835      0.000      -3.821      -2.650\n",
      "C(YYYYMM)[T.199903]    -3.0227      0.304     -9.942      0.000      -3.619      -2.427\n",
      "C(YYYYMM)[T.199904]    -3.0751      0.294    -10.443      0.000      -3.652      -2.498\n",
      "C(YYYYMM)[T.199905]    -3.1883      0.300    -10.629      0.000      -3.776      -2.600\n",
      "C(YYYYMM)[T.199906]    -2.9570      0.301     -9.812      0.000      -3.548      -2.366\n",
      "C(YYYYMM)[T.199907]    -3.0863      0.297    -10.383      0.000      -3.669      -2.504\n",
      "C(YYYYMM)[T.199908]    -3.2199      0.298    -10.787      0.000      -3.805      -2.635\n",
      "C(YYYYMM)[T.199909]    -2.9534      0.303     -9.748      0.000      -3.547      -2.360\n",
      "C(YYYYMM)[T.199910]    -2.9555      0.305     -9.682      0.000      -3.554      -2.357\n",
      "C(YYYYMM)[T.199911]    -3.0011      0.301     -9.975      0.000      -3.591      -2.411\n",
      "C(YYYYMM)[T.199912]    -2.5695      0.307     -8.357      0.000      -3.172      -1.967\n",
      "C(YYYYMM)[T.200001]    -2.5632      0.306     -8.378      0.000      -3.163      -1.964\n",
      "C(YYYYMM)[T.200002]    -2.6620      0.305     -8.716      0.000      -3.261      -2.063\n",
      "C(YYYYMM)[T.200003]    -2.6922      0.304     -8.846      0.000      -3.289      -2.096\n",
      "C(YYYYMM)[T.200004]    -2.7994      0.296     -9.460      0.000      -3.379      -2.219\n",
      "C(YYYYMM)[T.200005]    -2.8133      0.299     -9.399      0.000      -3.400      -2.227\n",
      "C(YYYYMM)[T.200006]    -2.7370      0.313     -8.755      0.000      -3.350      -2.124\n",
      "C(YYYYMM)[T.200007]    -2.4915      0.318     -7.837      0.000      -3.115      -1.868\n",
      "C(YYYYMM)[T.200008]    -2.4541      0.333     -7.360      0.000      -3.108      -1.801\n",
      "C(YYYYMM)[T.200009]    -2.2444      0.332     -6.769      0.000      -2.894      -1.594\n",
      "C(YYYYMM)[T.200010]    -2.1257      0.325     -6.543      0.000      -2.762      -1.489\n",
      "C(YYYYMM)[T.200011]    -2.4029      0.351     -6.847      0.000      -3.091      -1.715\n",
      "C(YYYYMM)[T.200012]    -2.5692      0.327     -7.848      0.000      -3.211      -1.928\n",
      "C(YYYYMM)[T.200101]    -2.3822      0.337     -7.062      0.000      -3.043      -1.721\n",
      "C(YYYYMM)[T.200102]    -2.4276      0.353     -6.886      0.000      -3.119      -1.737\n",
      "C(YYYYMM)[T.200103]    -2.6818      0.326     -8.235      0.000      -3.320      -2.043\n",
      "C(YYYYMM)[T.200104]    -2.1186      0.345     -6.146      0.000      -2.794      -1.443\n",
      "C(YYYYMM)[T.200105]    -2.3102      0.334     -6.927      0.000      -2.964      -1.656\n",
      "C(YYYYMM)[T.200106]    -2.2273      0.337     -6.615      0.000      -2.887      -1.567\n",
      "C(YYYYMM)[T.200107]    -2.7226      0.332     -8.192      0.000      -3.374      -2.071\n",
      "C(YYYYMM)[T.200108]    -2.5949      0.340     -7.626      0.000      -3.262      -1.928\n",
      "C(YYYYMM)[T.200109]    -2.1302      0.353     -6.028      0.000      -2.823      -1.438\n",
      "C(YYYYMM)[T.200110]    -1.5760      0.407     -3.872      0.000      -2.374      -0.778\n",
      "C(YYYYMM)[T.200111]    -2.1571      0.363     -5.938      0.000      -2.869      -1.445\n",
      "C(YYYYMM)[T.200112]    -2.0548      0.344     -5.973      0.000      -2.729      -1.381\n",
      "C(YYYYMM)[T.200201]    -2.7872      0.324     -8.603      0.000      -3.422      -2.152\n",
      "C(YYYYMM)[T.200202]    -2.7456      0.318     -8.634      0.000      -3.369      -2.122\n",
      "C(YYYYMM)[T.200203]    -2.5306      0.330     -7.669      0.000      -3.177      -1.884\n",
      "C(YYYYMM)[T.200204]    -2.6408      0.318     -8.298      0.000      -3.265      -2.017\n",
      "C(YYYYMM)[T.200205]    -2.7671      0.312     -8.867      0.000      -3.379      -2.156\n",
      "C(YYYYMM)[T.200206]    -2.5895      0.314     -8.251      0.000      -3.205      -1.974\n",
      "C(YYYYMM)[T.200207]    -2.9348      0.313     -9.391      0.000      -3.547      -2.322\n",
      "C(YYYYMM)[T.200208]    -2.8749      0.304     -9.453      0.000      -3.471      -2.279\n",
      "C(YYYYMM)[T.200209]    -2.6827      0.317     -8.474      0.000      -3.303      -2.062\n",
      "C(YYYYMM)[T.200210]    -2.4768      0.321     -7.722      0.000      -3.105      -1.848\n",
      "C(YYYYMM)[T.200211]    -2.7084      0.316     -8.565      0.000      -3.328      -2.089\n",
      "C(YYYYMM)[T.200212]    -2.6542      0.322     -8.247      0.000      -3.285      -2.023\n",
      "C(YYYYMM)[T.200301]    -3.0409      0.309     -9.825      0.000      -3.647      -2.434\n",
      "C(YYYYMM)[T.200302]    -2.4826      0.319     -7.793      0.000      -3.107      -1.858\n",
      "C(YYYYMM)[T.200303]    -2.3063      0.317     -7.274      0.000      -2.928      -1.685\n",
      "C(YYYYMM)[T.200304]    -2.0259      0.344     -5.890      0.000      -2.700      -1.352\n",
      "C(YYYYMM)[T.200305]    -2.7548      0.317     -8.699      0.000      -3.375      -2.134\n",
      "C(YYYYMM)[T.200306]    -2.8054      0.316     -8.867      0.000      -3.425      -2.185\n",
      "C(YYYYMM)[T.200307]    -3.0492      0.310     -9.832      0.000      -3.657      -2.441\n",
      "C(YYYYMM)[T.200308]    -2.8286      0.308     -9.187      0.000      -3.432      -2.225\n",
      "C(YYYYMM)[T.200309]    -2.3609      0.321     -7.365      0.000      -2.989      -1.733\n",
      "C(YYYYMM)[T.200310]    -2.7047      0.314     -8.616      0.000      -3.320      -2.089\n",
      "C(YYYYMM)[T.200311]    -2.6009      0.314     -8.283      0.000      -3.216      -1.985\n",
      "C(YYYYMM)[T.200312]    -2.9749      0.298     -9.971      0.000      -3.560      -2.390\n",
      "C(YYYYMM)[T.200401]    -2.7548      0.306     -9.013      0.000      -3.354      -2.156\n",
      "C(YYYYMM)[T.200402]    -2.6105      0.313     -8.336      0.000      -3.224      -1.997\n",
      "C(YYYYMM)[T.200403]    -2.4970      0.312     -7.991      0.000      -3.110      -1.885\n",
      "C(YYYYMM)[T.200404]    -2.2460      0.313     -7.183      0.000      -2.859      -1.633\n",
      "C(YYYYMM)[T.200405]    -2.2770      0.309     -7.374      0.000      -2.882      -1.672\n",
      "C(YYYYMM)[T.200406]    -2.1768      0.303     -7.176      0.000      -2.771      -1.582\n",
      "C(YYYYMM)[T.200407]    -2.6942      0.301     -8.959      0.000      -3.284      -2.105\n",
      "C(YYYYMM)[T.200408]    -2.9244      0.299     -9.777      0.000      -3.511      -2.338\n",
      "C(YYYYMM)[T.200409]    -2.8976      0.303     -9.559      0.000      -3.492      -2.303\n",
      "C(YYYYMM)[T.200410]    -2.7056      0.304     -8.904      0.000      -3.301      -2.110\n",
      "C(YYYYMM)[T.200411]    -2.8825      0.299     -9.630      0.000      -3.469      -2.296\n",
      "C(YYYYMM)[T.200412]    -2.8462      0.299     -9.528      0.000      -3.432      -2.261\n",
      "C(YYYYMM)[T.200501]    -2.7605      0.305     -9.041      0.000      -3.359      -2.162\n",
      "C(YYYYMM)[T.200502]    -2.9721      0.299     -9.925      0.000      -3.559      -2.385\n",
      "C(YYYYMM)[T.200503]    -2.5427      0.305     -8.340      0.000      -3.140      -1.945\n",
      "C(YYYYMM)[T.200504]    -2.5089      0.301     -8.347      0.000      -3.098      -1.920\n",
      "C(YYYYMM)[T.200505]    -2.8112      0.301     -9.353      0.000      -3.400      -2.222\n",
      "C(YYYYMM)[T.200506]    -2.5524      0.303     -8.425      0.000      -3.146      -1.959\n",
      "C(YYYYMM)[T.200507]    -2.7599      0.300     -9.203      0.000      -3.348      -2.172\n",
      "C(YYYYMM)[T.200508]    -2.6119      0.304     -8.580      0.000      -3.208      -2.015\n",
      "C(YYYYMM)[T.200509]    -1.1920      0.354     -3.365      0.001      -1.886      -0.498\n",
      "C(YYYYMM)[T.200510]    -0.8154      0.361     -2.256      0.024      -1.524      -0.107\n",
      "C(YYYYMM)[T.200511]    -1.9010      0.336     -5.651      0.000      -2.560      -1.242\n",
      "C(YYYYMM)[T.200512]    -2.0265      0.338     -5.990      0.000      -2.690      -1.363\n",
      "C(YYYYMM)[T.200601]    -2.5672      0.312     -8.241      0.000      -3.178      -1.957\n",
      "C(YYYYMM)[T.200602]    -2.9130      0.301     -9.686      0.000      -3.502      -2.324\n",
      "C(YYYYMM)[T.200603]    -2.6951      0.307     -8.775      0.000      -3.297      -2.093\n",
      "C(YYYYMM)[T.200604]    -2.1915      0.319     -6.872      0.000      -2.817      -1.566\n",
      "C(YYYYMM)[T.200605]    -1.8743      0.314     -5.968      0.000      -2.490      -1.259\n",
      "C(YYYYMM)[T.200606]    -2.2164      0.326     -6.793      0.000      -2.856      -1.577\n",
      "C(YYYYMM)[T.200607]    -2.6035      0.306     -8.503      0.000      -3.204      -2.003\n",
      "C(YYYYMM)[T.200608]    -1.9336      0.327     -5.922      0.000      -2.574      -1.294\n",
      "C(YYYYMM)[T.200609]    -2.5679      0.312     -8.241      0.000      -3.179      -1.957\n",
      "C(YYYYMM)[T.200610]    -2.6337      0.303     -8.697      0.000      -3.227      -2.040\n",
      "C(YYYYMM)[T.200611]    -2.7514      0.300     -9.178      0.000      -3.339      -2.164\n",
      "C(YYYYMM)[T.200612]    -2.7488      0.304     -9.028      0.000      -3.346      -2.152\n",
      "C(YYYYMM)[T.200701]    -2.7440      0.306     -8.954      0.000      -3.345      -2.143\n",
      "C(YYYYMM)[T.200702]    -2.8558      0.298     -9.585      0.000      -3.440      -2.272\n",
      "C(YYYYMM)[T.200703]    -2.8296      0.306     -9.249      0.000      -3.429      -2.230\n",
      "C(YYYYMM)[T.200704]    -2.6332      0.304     -8.660      0.000      -3.229      -2.037\n",
      "C(YYYYMM)[T.200705]    -2.2183      0.314     -7.070      0.000      -2.833      -1.603\n",
      "C(YYYYMM)[T.200706]    -2.4352      0.311     -7.830      0.000      -3.045      -1.826\n",
      "C(YYYYMM)[T.200707]    -2.1600      0.319     -6.781      0.000      -2.784      -1.536\n",
      "C(YYYYMM)[T.200708]    -2.2320      0.321     -6.963      0.000      -2.860      -1.604\n",
      "C(YYYYMM)[T.200709]    -2.1114      0.331     -6.385      0.000      -2.760      -1.463\n",
      "C(YYYYMM)[T.200710]    -2.7872      0.307     -9.090      0.000      -3.388      -2.186\n",
      "C(YYYYMM)[T.200711]    -2.0603      0.319     -6.463      0.000      -2.685      -1.436\n",
      "C(YYYYMM)[T.200712]    -1.9181      0.333     -5.768      0.000      -2.570      -1.266\n",
      "C(YYYYMM)[T.200801]    -2.3642      0.310     -7.628      0.000      -2.972      -1.757\n",
      "C(YYYYMM)[T.200802]    -2.1927      0.315     -6.968      0.000      -2.810      -1.576\n",
      "C(YYYYMM)[T.200803]    -1.7703      0.324     -5.456      0.000      -2.406      -1.134\n",
      "C(YYYYMM)[T.200804]    -1.0087      0.340     -2.968      0.003      -1.675      -0.342\n",
      "C(YYYYMM)[T.200805]     0.0636      0.358      0.178      0.859      -0.637       0.764\n",
      "C(YYYYMM)[T.200806]    -0.0228      0.362     -0.063      0.950      -0.733       0.687\n",
      "C(YYYYMM)[T.200807]    -0.2668      0.349     -0.764      0.445      -0.951       0.417\n",
      "C(YYYYMM)[T.200808]    -1.2221      0.342     -3.572      0.000      -1.893      -0.552\n",
      "C(YYYYMM)[T.200809]    -1.3831      0.338     -4.088      0.000      -2.046      -0.720\n",
      "C(YYYYMM)[T.200810]    -1.0793      0.349     -3.092      0.002      -1.764      -0.395\n",
      "C(YYYYMM)[T.200811]    -0.8015      0.366     -2.189      0.029      -1.519      -0.084\n",
      "C(YYYYMM)[T.200812]    -1.1073      0.371     -2.984      0.003      -1.835      -0.380\n",
      "C(YYYYMM)[T.200901]    -0.9258      0.381     -2.432      0.015      -1.672      -0.180\n",
      "C(YYYYMM)[T.200902]    -0.2855      0.390     -0.732      0.464      -1.050       0.479\n",
      "C(YYYYMM)[T.200903]    -1.3410      0.358     -3.742      0.000      -2.043      -0.639\n",
      "C(YYYYMM)[T.200904]    -1.0676      0.361     -2.955      0.003      -1.776      -0.359\n",
      "C(YYYYMM)[T.200905]    -1.4476      0.354     -4.085      0.000      -2.142      -0.753\n",
      "C(YYYYMM)[T.200906]    -1.4574      0.352     -4.144      0.000      -2.147      -0.768\n",
      "C(YYYYMM)[T.200907]    -1.5451      0.351     -4.401      0.000      -2.233      -0.857\n",
      "C(YYYYMM)[T.200908]    -1.6587      0.348     -4.763      0.000      -2.341      -0.976\n",
      "C(YYYYMM)[T.200909]    -1.7629      0.352     -5.010      0.000      -2.453      -1.073\n",
      "C(YYYYMM)[T.200910]    -2.0484      0.322     -6.354      0.000      -2.680      -1.417\n",
      "C(YYYYMM)[T.200911]    -1.9066      0.343     -5.557      0.000      -2.579      -1.234\n",
      "C(YYYYMM)[T.200912]    -2.0170      0.339     -5.952      0.000      -2.681      -1.353\n",
      "C(YYYYMM)[T.201001]    -1.5768      0.342     -4.611      0.000      -2.247      -0.907\n",
      "C(YYYYMM)[T.201002]    -1.6972      0.347     -4.896      0.000      -2.377      -1.018\n",
      "C(YYYYMM)[T.201003]    -2.0620      0.335     -6.148      0.000      -2.719      -1.405\n",
      "C(YYYYMM)[T.201004]    -1.9452      0.336     -5.796      0.000      -2.603      -1.287\n",
      "C(YYYYMM)[T.201005]    -1.7625      0.326     -5.400      0.000      -2.402      -1.123\n",
      "C(YYYYMM)[T.201006]    -2.2344      0.326     -6.847      0.000      -2.874      -1.595\n",
      "C(YYYYMM)[T.201007]    -2.2768      0.321     -7.093      0.000      -2.906      -1.648\n",
      "C(YYYYMM)[T.201008]    -2.0451      0.325     -6.300      0.000      -2.681      -1.409\n",
      "C(YYYYMM)[T.201009]    -2.2755      0.344     -6.622      0.000      -2.949      -1.602\n",
      "C(YYYYMM)[T.201010]    -2.1046      0.326     -6.447      0.000      -2.744      -1.465\n",
      "C(YYYYMM)[T.201011]    -2.1177      0.321     -6.601      0.000      -2.746      -1.489\n",
      "C(YYYYMM)[T.201012]    -1.7459      0.339     -5.157      0.000      -2.409      -1.082\n",
      "C(YYYYMM)[T.201101]    -1.5437      0.323     -4.779      0.000      -2.177      -0.911\n",
      "C(YYYYMM)[T.201102]    -1.5951      0.337     -4.733      0.000      -2.256      -0.935\n",
      "C(YYYYMM)[T.201103]    -1.1847      0.323     -3.665      0.000      -1.818      -0.551\n",
      "C(YYYYMM)[T.201104]    -1.0839      0.335     -3.240      0.001      -1.740      -0.428\n",
      "C(YYYYMM)[T.201105]    -1.4177      0.324     -4.374      0.000      -2.053      -0.782\n",
      "C(YYYYMM)[T.201106]    -1.5346      0.325     -4.726      0.000      -2.171      -0.898\n",
      "C(YYYYMM)[T.201107]    -1.7532      0.328     -5.352      0.000      -2.395      -1.111\n",
      "C(YYYYMM)[T.201108]    -1.8441      0.324     -5.699      0.000      -2.478      -1.210\n",
      "C(YYYYMM)[T.201109]    -1.9768      0.324     -6.098      0.000      -2.612      -1.341\n",
      "C(YYYYMM)[T.201110]    -2.1279      0.321     -6.637      0.000      -2.756      -1.500\n",
      "C(YYYYMM)[T.201111]    -2.0916      0.319     -6.560      0.000      -2.717      -1.467\n",
      "C(YYYYMM)[T.201112]    -2.2385      0.316     -7.076      0.000      -2.859      -1.618\n",
      "C(YYYYMM)[T.201201]    -2.0798      0.320     -6.505      0.000      -2.706      -1.453\n",
      "C(YYYYMM)[T.201202]    -2.1624      0.313     -6.907      0.000      -2.776      -1.549\n",
      "C(YYYYMM)[T.201203]    -1.4210      0.329     -4.324      0.000      -2.065      -0.777\n",
      "C(YYYYMM)[T.201204]    -2.0835      0.313     -6.646      0.000      -2.698      -1.469\n",
      "C(YYYYMM)[T.201205]    -2.3121      0.312     -7.409      0.000      -2.924      -1.700\n",
      "C(YYYYMM)[T.201206]    -2.2397      0.318     -7.034      0.000      -2.864      -1.616\n",
      "C(YYYYMM)[T.201207]    -1.8882      0.329     -5.734      0.000      -2.534      -1.243\n",
      "C(YYYYMM)[T.201208]    -1.6786      0.317     -5.289      0.000      -2.301      -1.057\n",
      "C(YYYYMM)[T.201209]    -1.6205      0.323     -5.019      0.000      -2.253      -0.988\n",
      "C(YYYYMM)[T.201210]    -1.9089      0.330     -5.785      0.000      -2.556      -1.262\n",
      "C(YYYYMM)[T.201211]    -1.8846      0.338     -5.577      0.000      -2.547      -1.222\n",
      "C(YYYYMM)[T.201212]    -2.0160      0.331     -6.099      0.000      -2.664      -1.368\n",
      "C(YYYYMM)[T.201301]    -2.0494      0.320     -6.408      0.000      -2.676      -1.423\n",
      "C(YYYYMM)[T.201302]    -1.8553      0.332     -5.586      0.000      -2.506      -1.204\n",
      "C(YYYYMM)[T.201303]    -2.3337      0.312     -7.471      0.000      -2.946      -1.721\n",
      "C(YYYYMM)[T.201304]    -2.3126      0.317     -7.304      0.000      -2.933      -1.692\n",
      "C(YYYYMM)[T.201305]    -2.0139      0.325     -6.191      0.000      -2.651      -1.376\n",
      "C(YYYYMM)[T.201306]    -2.3768      0.314     -7.566      0.000      -2.993      -1.761\n",
      "C(YYYYMM)[T.201307]    -2.3519      0.316     -7.444      0.000      -2.971      -1.733\n",
      "C(YYYYMM)[T.201308]    -2.0570      0.330     -6.226      0.000      -2.705      -1.409\n",
      "C(YYYYMM)[T.201309]    -2.2913      0.311     -7.362      0.000      -2.901      -1.681\n",
      "C(YYYYMM)[T.201310]    -2.6640      0.308     -8.661      0.000      -3.267      -2.061\n",
      "C(YYYYMM)[T.201311]    -2.6433      0.313     -8.454      0.000      -3.256      -2.030\n",
      "C(YYYYMM)[T.201312]    -2.5495      0.314     -8.125      0.000      -3.165      -1.934\n",
      "C(YYYYMM)[T.201401]    -2.5766      0.315     -8.172      0.000      -3.195      -1.959\n",
      "C(YYYYMM)[T.201402]    -2.2977      0.318     -7.222      0.000      -2.921      -1.674\n",
      "C(YYYYMM)[T.201403]    -2.3496      0.314     -7.492      0.000      -2.964      -1.735\n",
      "C(YYYYMM)[T.201404]    -2.4497      0.309     -7.918      0.000      -3.056      -1.843\n",
      "C(YYYYMM)[T.201405]    -2.1367      0.317     -6.734      0.000      -2.759      -1.515\n",
      "C(YYYYMM)[T.201406]    -2.6561      0.298     -8.908      0.000      -3.240      -2.072\n",
      "C(YYYYMM)[T.201407]    -2.5850      0.301     -8.594      0.000      -3.175      -1.996\n",
      "C(YYYYMM)[T.201408]    -2.3148      0.307     -7.531      0.000      -2.917      -1.712\n",
      "C(YYYYMM)[T.201409]    -2.6723      0.306     -8.721      0.000      -3.273      -2.072\n",
      "C(YYYYMM)[T.201410]    -2.7095      0.303     -8.957      0.000      -3.302      -2.117\n",
      "C(YYYYMM)[T.201411]    -2.8070      0.302     -9.298      0.000      -3.399      -2.215\n",
      "C(YYYYMM)[T.201412]    -3.0099      0.296    -10.166      0.000      -3.590      -2.430\n",
      "C(YYYYMM)[T.201501]    -2.9895      0.297    -10.053      0.000      -3.572      -2.407\n",
      "C(YYYYMM)[T.201502]    -2.7852      0.303     -9.189      0.000      -3.379      -2.191\n",
      "C(YYYYMM)[T.201503]    -2.7928      0.298     -9.378      0.000      -3.376      -2.209\n",
      "C(YYYYMM)[T.201504]    -3.0108      0.299    -10.073      0.000      -3.597      -2.425\n",
      "C(YYYYMM)[T.201505]    -2.9588      0.300     -9.875      0.000      -3.546      -2.372\n",
      "C(YYYYMM)[T.201506]    -2.8727      0.305     -9.408      0.000      -3.471      -2.274\n",
      "C(YYYYMM)[T.201507]    -2.6511      0.315     -8.420      0.000      -3.268      -2.034\n",
      "C(YYYYMM)[T.201508]    -2.7771      0.308     -9.022      0.000      -3.380      -2.174\n",
      "C(YYYYMM)[T.201509]    -3.0607      0.298    -10.256      0.000      -3.646      -2.476\n",
      "C(YYYYMM)[T.201510]    -2.8294      0.307     -9.212      0.000      -3.431      -2.227\n",
      "C(YYYYMM)[T.201511]    -2.8361      0.305     -9.313      0.000      -3.433      -2.239\n",
      "C(YYYYMM)[T.201512]    -3.1083      0.303    -10.256      0.000      -3.702      -2.514\n",
      "C(YYYYMM)[T.201601]    -2.8331      0.307     -9.214      0.000      -3.436      -2.230\n",
      "C(YYYYMM)[T.201602]    -2.9006      0.307     -9.440      0.000      -3.503      -2.298\n",
      "C(YYYYMM)[T.201603]    -2.9667      0.302     -9.829      0.000      -3.558      -2.375\n",
      "C(YYYYMM)[T.201604]    -2.9515      0.304     -9.712      0.000      -3.547      -2.356\n",
      "C(YYYYMM)[T.201605]    -3.2280      0.303    -10.648      0.000      -3.822      -2.634\n",
      "C(YYYYMM)[T.201606]    -3.3899      0.292    -11.600      0.000      -3.963      -2.817\n",
      "C(YYYYMM)[T.201607]    -3.1285      0.296    -10.557      0.000      -3.709      -2.548\n",
      "C(YYYYMM)[T.201608]    -3.0693      0.303    -10.133      0.000      -3.663      -2.476\n",
      "C(YYYYMM)[T.201609]    -3.2555      0.296    -11.014      0.000      -3.835      -2.676\n",
      "C(YYYYMM)[T.201610]    -3.3376      0.295    -11.330      0.000      -3.915      -2.760\n",
      "C(YYYYMM)[T.201611]    -3.1305      0.295    -10.599      0.000      -3.709      -2.552\n",
      "C(YYYYMM)[T.201612]    -3.1455      0.296    -10.618      0.000      -3.726      -2.565\n",
      "C(YYYYMM)[T.201701]    -2.9874      0.295    -10.117      0.000      -3.566      -2.409\n",
      "C(YYYYMM)[T.201702]    -2.8742      0.294     -9.765      0.000      -3.451      -2.297\n",
      "C(YYYYMM)[T.201703]    -3.0291      0.296    -10.245      0.000      -3.609      -2.450\n",
      "C(YYYYMM)[T.201704]    -3.0509      0.297    -10.280      0.000      -3.633      -2.469\n",
      "C(YYYYMM)[T.201705]    -3.1196      0.293    -10.656      0.000      -3.693      -2.546\n",
      "C(YYYYMM)[T.201706]    -3.0035      0.298    -10.067      0.000      -3.588      -2.419\n",
      "C(YYYYMM)[T.201707]    -3.3262      0.291    -11.446      0.000      -3.896      -2.757\n",
      "C(YYYYMM)[T.201708]    -3.0593      0.295    -10.354      0.000      -3.638      -2.480\n",
      "C(YYYYMM)[T.201709]    -3.0479      0.295    -10.322      0.000      -3.627      -2.469\n",
      "C(YYYYMM)[T.201710]    -3.2518      0.296    -10.994      0.000      -3.832      -2.672\n",
      "C(YYYYMM)[T.201711]    -3.1751      0.293    -10.837      0.000      -3.749      -2.601\n",
      "C(YYYYMM)[T.201712]    -3.1646      0.289    -10.948      0.000      -3.731      -2.598\n",
      "C(YYYYMM)[T.201801]    -3.2031      0.289    -11.078      0.000      -3.770      -2.636\n",
      "C(YYYYMM)[T.201802]    -3.0598      0.290    -10.555      0.000      -3.628      -2.492\n",
      "C(YYYYMM)[T.201803]    -3.1206      0.288    -10.842      0.000      -3.685      -2.556\n",
      "C(YYYYMM)[T.201804]    -3.0907      0.296    -10.449      0.000      -3.670      -2.511\n",
      "C(YYYYMM)[T.201805]    -3.0987      0.288    -10.741      0.000      -3.664      -2.533\n",
      "C(YYYYMM)[T.201806]    -2.8168      0.296     -9.517      0.000      -3.397      -2.237\n",
      "C(YYYYMM)[T.201807]    -2.5963      0.304     -8.540      0.000      -3.192      -2.000\n",
      "C(YYYYMM)[T.201808]    -2.6469      0.300     -8.817      0.000      -3.235      -2.059\n",
      "C(YYYYMM)[T.201809]    -3.0294      0.291    -10.396      0.000      -3.601      -2.458\n",
      "C(YYYYMM)[T.201810]    -2.6405      0.302     -8.736      0.000      -3.233      -2.048\n",
      "C(YYYYMM)[T.201811]    -2.8126      0.298     -9.450      0.000      -3.396      -2.229\n",
      "C(YYYYMM)[T.201812]    -3.0673      0.296    -10.353      0.000      -3.648      -2.487\n",
      "C(YYYYMM)[T.201901]    -3.3895      0.288    -11.784      0.000      -3.953      -2.826\n",
      "C(YYYYMM)[T.201902]    -3.3385      0.292    -11.417      0.000      -3.912      -2.765\n",
      "C(YYYYMM)[T.201903]    -3.3343      0.289    -11.541      0.000      -3.901      -2.768\n",
      "C(YYYYMM)[T.201904]    -3.3305      0.292    -11.398      0.000      -3.903      -2.758\n",
      "C(YYYYMM)[T.201905]    -2.9445      0.292    -10.070      0.000      -3.518      -2.371\n",
      "C(YYYYMM)[T.201906]    -2.8533      0.301     -9.469      0.000      -3.444      -2.263\n",
      "C(YYYYMM)[T.201907]    -3.0056      0.296    -10.139      0.000      -3.587      -2.425\n",
      "C(YYYYMM)[T.201908]    -2.8055      0.299     -9.398      0.000      -3.391      -2.220\n",
      "C(YYYYMM)[T.201909]    -2.7873      0.300     -9.304      0.000      -3.374      -2.200\n",
      "C(YYYYMM)[T.201910]    -3.2429      0.294    -11.024      0.000      -3.819      -2.666\n",
      "C(YYYYMM)[T.201911]    -3.0071      0.297    -10.123      0.000      -3.589      -2.425\n",
      "C(YYYYMM)[T.201912]    -3.3944      0.293    -11.585      0.000      -3.969      -2.820\n",
      "C(YYYYMM)[T.202001]    -3.3229      0.290    -11.444      0.000      -3.892      -2.754\n",
      "C(YYYYMM)[T.202002]    -3.3563      0.292    -11.506      0.000      -3.928      -2.785\n",
      "C(YYYYMM)[T.202003]    -3.0527      0.300    -10.184      0.000      -3.640      -2.465\n",
      "C(YYYYMM)[T.202004]    -1.5293      0.333     -4.594      0.000      -2.182      -0.877\n",
      "C(YYYYMM)[T.202005]    -0.9150      0.326     -2.806      0.005      -1.554      -0.276\n",
      "C(YYYYMM)[T.202006]    -1.7021      0.308     -5.519      0.000      -2.307      -1.098\n",
      "C(YYYYMM)[T.202007]    -1.8157      0.319     -5.695      0.000      -2.441      -1.191\n",
      "C(YYYYMM)[T.202008]    -1.7987      0.306     -5.880      0.000      -2.398      -1.199\n",
      "C(YYYYMM)[T.202009]    -2.1404      0.316     -6.770      0.000      -2.760      -1.521\n",
      "C(YYYYMM)[T.202010]    -2.4706      0.306     -8.073      0.000      -3.070      -1.871\n",
      "C(YYYYMM)[T.202011]    -2.3728      0.307     -7.737      0.000      -2.974      -1.772\n",
      "C(YYYYMM)[T.202012]    -2.4078      0.317     -7.594      0.000      -3.029      -1.786\n",
      "C(YYYYMM)[T.202101]    -2.0010      0.322     -6.207      0.000      -2.633      -1.369\n",
      "C(YYYYMM)[T.202102]    -1.7252      0.314     -5.487      0.000      -2.341      -1.109\n",
      "C(YYYYMM)[T.202103]    -1.7241      0.322     -5.360      0.000      -2.355      -1.094\n",
      "C(YYYYMM)[T.202104]    -1.6649      0.312     -5.332      0.000      -2.277      -1.053\n",
      "C(YYYYMM)[T.202105]    -0.4935      0.350     -1.412      0.158      -1.179       0.192\n",
      "C(YYYYMM)[T.202106]     0.0443      0.374      0.119      0.906      -0.688       0.777\n",
      "C(YYYYMM)[T.202107]     0.1235      0.355      0.348      0.728      -0.573       0.820\n",
      "C(YYYYMM)[T.202108]    -0.0561      0.363     -0.155      0.877      -0.767       0.654\n",
      "C(YYYYMM)[T.202109]     0.1304      0.364      0.358      0.720      -0.583       0.844\n",
      "C(YYYYMM)[T.202110]     0.2894      0.359      0.806      0.420      -0.414       0.993\n",
      "C(YYYYMM)[T.202111]     0.5577      0.382      1.459      0.145      -0.192       1.307\n",
      "C(YYYYMM)[T.202112]     0.6957      0.383      1.817      0.069      -0.055       1.446\n",
      "C(YYYYMM)[T.202201]     0.2995      0.368      0.813      0.416      -0.422       1.021\n",
      "C(YYYYMM)[T.202202]     0.1530      0.347      0.441      0.659      -0.528       0.834\n",
      "C(YYYYMM)[T.202203]     1.6154      0.396      4.083      0.000       0.840       2.391\n",
      "C(YYYYMM)[T.202204]     2.0339      0.449      4.525      0.000       1.153       2.915\n",
      "C(YYYYMM)[T.202205]     1.8728      0.440      4.256      0.000       1.010       2.735\n",
      "C(YYYYMM)[T.202206]     2.5068      0.470      5.333      0.000       1.586       3.428\n",
      "C(YYYYMM)[T.202207]     2.5997      0.511      5.089      0.000       1.598       3.601\n",
      "C(YYYYMM)[T.202208]     1.6803      0.463      3.630      0.000       0.773       2.588\n",
      "C(YYYYMM)[T.202209]     1.7634      0.490      3.600      0.000       0.803       2.723\n",
      "C(YYYYMM)[T.202210]     1.9591      0.470      4.169      0.000       1.038       2.880\n",
      "C(YYYYMM)[T.202211]     2.2369      0.504      4.440      0.000       1.250       3.224\n",
      "C(YYYYMM)[T.202212]     1.8081      0.515      3.513      0.000       0.799       2.817\n",
      "C(YYYYMM)[T.202301]     0.7557      0.459      1.646      0.100      -0.144       1.656\n",
      "C(YYYYMM)[T.202302]     0.9243      0.473      1.954      0.051      -0.003       1.851\n",
      "C(YYYYMM)[T.202303]     0.7404      0.475      1.557      0.119      -0.192       1.672\n",
      "C(YYYYMM)[T.202304]     1.2382      0.504      2.456      0.014       0.250       2.226\n",
      "C(YYYYMM)[T.202305]     0.5902      0.471      1.252      0.210      -0.333       1.514\n",
      "C(YYYYMM)[T.202306]     0.1581      0.467      0.338      0.735      -0.758       1.074\n",
      "C(YYYYMM)[T.202307]    -0.3271      0.441     -0.742      0.458      -1.191       0.537\n",
      "C(YYYYMM)[T.202308]     0.0252      0.469      0.054      0.957      -0.895       0.945\n",
      "C(YYYYMM)[T.202309]    -0.0003      0.461     -0.001      0.999      -0.903       0.903\n",
      "C(YYYYMM)[T.202310]     0.7713      0.471      1.637      0.102      -0.152       1.695\n",
      "C(YYYYMM)[T.202311]     0.6630      0.466      1.424      0.154      -0.250       1.576\n",
      "C(YYYYMM)[T.202312]    -0.5142      0.459     -1.120      0.263      -1.414       0.386\n",
      "C(YYYYMM)[T.202401]    -0.5379      0.459     -1.171      0.242      -1.438       0.362\n",
      "C(YYYYMM)[T.202402]    -0.2820      0.445     -0.634      0.526      -1.153       0.589\n",
      "C(YYYYMM)[T.202403]    -0.7794      0.417     -1.869      0.062      -1.597       0.038\n",
      "C(YYYYMM)[T.202404]    -0.6158      0.400     -1.539      0.124      -1.400       0.168\n",
      "C(YYYYMM)[T.202405]    -0.2178      0.405     -0.537      0.591      -1.012       0.577\n",
      "C(YYYYMM)[T.202406]    -0.0138      0.420     -0.033      0.974      -0.837       0.810\n",
      "C(YYYYMM)[T.202407]    -0.2613      0.444     -0.588      0.556      -1.132       0.610\n",
      "C(YYYYMM)[T.202408]     0.1943      0.423      0.459      0.646      -0.636       1.024\n",
      "C(YYYYMM)[T.202409]    -0.2093      0.418     -0.500      0.617      -1.029       0.611\n",
      "C(YYYYMM)[T.202410]     0.2263      0.441      0.513      0.608      -0.638       1.090\n",
      "C(YYYYMM)[T.202411]     0.8215      0.482      1.705      0.088      -0.123       1.766\n",
      "C(YYYYMM)[T.202412]     1.7324      0.484      3.579      0.000       0.784       2.681\n",
      "C(YYYYMM)[T.202501]     1.1091      0.463      2.395      0.017       0.201       2.017\n",
      "C(YYYYMM)[T.202502]     2.3190      0.453      5.115      0.000       1.430       3.208\n",
      "C(YYYYMM)[T.202503]     3.4942      0.417      8.380      0.000       2.677       4.311\n",
      "C(YYYYMM)[T.202504]     4.6882      0.461     10.170      0.000       3.785       5.592\n",
      "D_more                  1.3401      0.028     47.493      0.000       1.285       1.395\n",
      "D_less                 -0.2057      0.031     -6.660      0.000      -0.266      -0.145\n",
      "=======================================================================================\n"
     ]
    }
   ],
   "source": [
    "import statsmodels.formula.api as smf\n",
    "\n",
    "# 6a. Drop rows with missing inflation or unemployment dummy data\n",
    "reg_df = df_cross[['PX1Q2', 'D_more', 'D_less', 'YYYYMM']].dropna()\n",
    "\n",
    "# 6b. Regression (1): Pooled OLS\n",
    "reg1 = smf.ols(\"PX1Q2 ~ D_more + D_less\", data=reg_df).fit(cov_type=\"HC1\")\n",
    "\n",
    "# 6c. Regression (2): Time Fixed Effects\n",
    "reg_df['YYYYMM'] = reg_df['YYYYMM'].astype('category')\n",
    "reg2 = smf.ols(\"PX1Q2 ~ D_more + D_less + C(YYYYMM)\", data=reg_df).fit(cov_type=\"HC1\")\n",
    "\n",
    "# 6d. Display results\n",
    "print(\"=== Regression (1): Pooled OLS ===\")\n",
    "print(reg1.summary().tables[1])\n",
    "print(\"\\n=== Regression (2): Time Fixed Effects ===\")\n",
    "print(reg2.summary().tables[1])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c48383c1-27e2-4e1b-81fc-aee6ae9e4b15",
   "metadata": {},
   "source": [
    "# Step 7: Regressions (3) and (4) — Panel Sample\n",
    "\n",
    "We now estimate the final two regressions in Table 1 using only panel respondents (`df_panel`):\n",
    "\n",
    "- **Column (3):** OLS with time fixed effects (`YYYYMM`)\n",
    "- **Column (4):** Fixed Effects regression with both consumer (`person_id`) and time (`YYYYMM`) fixed effects\n",
    "\n",
    "This specification allows us to control for unobserved heterogeneity across individuals, as well as common shocks over time.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "0c9927d8-bc50-4d32-99a3-e914e5261395",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "=== Regression (3): Time Fixed Effects (Panel Sample) ===\n",
      "=======================================================================================\n",
      "                          coef    std err          z      P>|z|      [0.025      0.975]\n",
      "---------------------------------------------------------------------------------------\n",
      "Intercept              10.2560      0.622     16.492      0.000       9.037      11.475\n",
      "C(YYYYMM)[T.198008]     0.3132      0.906      0.346      0.729      -1.462       2.088\n",
      "C(YYYYMM)[T.198009]    -0.6372      0.772     -0.826      0.409      -2.150       0.875\n",
      "C(YYYYMM)[T.198010]     1.3423      0.902      1.489      0.137      -0.425       3.109\n",
      "C(YYYYMM)[T.198011]     0.4909      0.850      0.578      0.563      -1.174       2.156\n",
      "C(YYYYMM)[T.198012]     1.5913      0.924      1.722      0.085      -0.220       3.402\n",
      "C(YYYYMM)[T.198101]     0.0613      0.739      0.083      0.934      -1.387       1.510\n",
      "C(YYYYMM)[T.198102]    -0.1741      0.744     -0.234      0.815      -1.631       1.283\n",
      "C(YYYYMM)[T.198103]    -1.2499      0.710     -1.760      0.078      -2.642       0.142\n",
      "C(YYYYMM)[T.198104]     0.6021      0.772      0.780      0.435      -0.910       2.114\n",
      "C(YYYYMM)[T.198105]    -0.3099      0.761     -0.408      0.684      -1.801       1.181\n",
      "C(YYYYMM)[T.198106]    -1.2002      0.722     -1.662      0.096      -2.615       0.215\n",
      "C(YYYYMM)[T.198107]    -1.4794      0.725     -2.039      0.041      -2.901      -0.057\n",
      "C(YYYYMM)[T.198108]    -1.3906      0.729     -1.908      0.056      -2.819       0.038\n",
      "C(YYYYMM)[T.198109]    -0.9545      0.755     -1.264      0.206      -2.435       0.526\n",
      "C(YYYYMM)[T.198110]    -1.3999      0.716     -1.955      0.051      -2.804       0.004\n",
      "C(YYYYMM)[T.198111]    -1.2575      0.723     -1.740      0.082      -2.674       0.159\n",
      "C(YYYYMM)[T.198112]    -1.8150      0.724     -2.508      0.012      -3.233      -0.397\n",
      "C(YYYYMM)[T.198201]    -2.4131      0.721     -3.345      0.001      -3.827      -0.999\n",
      "C(YYYYMM)[T.198202]    -2.1104      0.718     -2.938      0.003      -3.518      -0.703\n",
      "C(YYYYMM)[T.198203]    -2.3571      0.738     -3.194      0.001      -3.803      -0.911\n",
      "C(YYYYMM)[T.198204]    -2.7637      0.701     -3.941      0.000      -4.138      -1.389\n",
      "C(YYYYMM)[T.198205]    -2.7717      0.724     -3.830      0.000      -4.190      -1.353\n",
      "C(YYYYMM)[T.198206]    -2.4142      0.725     -3.332      0.001      -3.834      -0.994\n",
      "C(YYYYMM)[T.198207]    -3.1027      0.698     -4.446      0.000      -4.471      -1.735\n",
      "C(YYYYMM)[T.198208]    -2.9521      0.695     -4.249      0.000      -4.314      -1.590\n",
      "C(YYYYMM)[T.198209]    -3.3116      0.706     -4.689      0.000      -4.696      -1.927\n",
      "C(YYYYMM)[T.198210]    -1.9365      0.735     -2.635      0.008      -3.377      -0.496\n",
      "C(YYYYMM)[T.198211]    -2.3829      0.717     -3.323      0.001      -3.789      -0.977\n",
      "C(YYYYMM)[T.198212]    -2.6057      0.731     -3.566      0.000      -4.038      -1.174\n",
      "C(YYYYMM)[T.198301]    -3.1220      0.761     -4.103      0.000      -4.613      -1.631\n",
      "C(YYYYMM)[T.198302]    -3.2491      0.723     -4.492      0.000      -4.667      -1.831\n",
      "C(YYYYMM)[T.198303]    -4.0269      0.689     -5.844      0.000      -5.378      -2.676\n",
      "C(YYYYMM)[T.198304]    -3.4220      0.702     -4.877      0.000      -4.797      -2.047\n",
      "C(YYYYMM)[T.198305]    -3.3524      0.706     -4.748      0.000      -4.736      -1.969\n",
      "C(YYYYMM)[T.198306]    -3.5264      0.695     -5.073      0.000      -4.889      -2.164\n",
      "C(YYYYMM)[T.198307]    -3.9311      0.697     -5.636      0.000      -5.298      -2.564\n",
      "C(YYYYMM)[T.198308]    -3.8413      0.709     -5.416      0.000      -5.231      -2.451\n",
      "C(YYYYMM)[T.198309]    -3.5639      0.707     -5.044      0.000      -4.949      -2.179\n",
      "C(YYYYMM)[T.198310]    -2.9140      0.723     -4.028      0.000      -4.332      -1.496\n",
      "C(YYYYMM)[T.198311]    -3.3763      0.725     -4.657      0.000      -4.797      -1.955\n",
      "C(YYYYMM)[T.198312]    -3.6300      0.702     -5.172      0.000      -5.006      -2.254\n",
      "C(YYYYMM)[T.198401]    -4.5469      0.682     -6.668      0.000      -5.883      -3.210\n",
      "C(YYYYMM)[T.198402]    -3.9972      0.711     -5.625      0.000      -5.390      -2.605\n",
      "C(YYYYMM)[T.198403]    -4.0502      0.711     -5.700      0.000      -5.443      -2.658\n",
      "C(YYYYMM)[T.198404]    -3.5450      0.703     -5.040      0.000      -4.924      -2.166\n",
      "C(YYYYMM)[T.198405]    -3.5232      0.712     -4.948      0.000      -4.919      -2.128\n",
      "C(YYYYMM)[T.198406]    -4.5492      0.660     -6.890      0.000      -5.843      -3.255\n",
      "C(YYYYMM)[T.198407]    -4.4561      0.692     -6.440      0.000      -5.812      -3.100\n",
      "C(YYYYMM)[T.198408]    -4.6536      0.693     -6.714      0.000      -6.012      -3.295\n",
      "C(YYYYMM)[T.198409]    -4.5001      0.705     -6.384      0.000      -5.882      -3.118\n",
      "C(YYYYMM)[T.198410]    -4.0601      0.718     -5.656      0.000      -5.467      -2.653\n",
      "C(YYYYMM)[T.198411]    -4.3469      0.697     -6.235      0.000      -5.713      -2.981\n",
      "C(YYYYMM)[T.198412]    -4.3644      0.697     -6.263      0.000      -5.730      -2.999\n",
      "C(YYYYMM)[T.198501]    -5.2453      0.682     -7.692      0.000      -6.582      -3.909\n",
      "C(YYYYMM)[T.198502]    -4.8592      0.690     -7.045      0.000      -6.211      -3.507\n",
      "C(YYYYMM)[T.198503]    -4.9966      0.683     -7.312      0.000      -6.336      -3.657\n",
      "C(YYYYMM)[T.198504]    -4.3506      0.692     -6.291      0.000      -5.706      -2.995\n",
      "C(YYYYMM)[T.198505]    -4.6968      0.697     -6.736      0.000      -6.063      -3.330\n",
      "C(YYYYMM)[T.198506]    -4.5871      0.683     -6.715      0.000      -5.926      -3.248\n",
      "C(YYYYMM)[T.198507]    -5.6997      0.673     -8.463      0.000      -7.020      -4.380\n",
      "C(YYYYMM)[T.198508]    -5.7853      0.658     -8.789      0.000      -7.075      -4.495\n",
      "C(YYYYMM)[T.198509]    -4.9649      0.690     -7.195      0.000      -6.317      -3.613\n",
      "C(YYYYMM)[T.198510]    -4.7821      0.686     -6.968      0.000      -6.127      -3.437\n",
      "C(YYYYMM)[T.198511]    -4.2940      0.717     -5.989      0.000      -5.699      -2.889\n",
      "C(YYYYMM)[T.198512]    -4.4765      0.690     -6.490      0.000      -5.828      -3.125\n",
      "C(YYYYMM)[T.198601]    -5.3206      0.684     -7.781      0.000      -6.661      -3.980\n",
      "C(YYYYMM)[T.198602]    -5.3122      0.689     -7.711      0.000      -6.662      -3.962\n",
      "C(YYYYMM)[T.198603]    -5.2854      0.685     -7.714      0.000      -6.628      -3.943\n",
      "C(YYYYMM)[T.198604]    -5.0979      0.703     -7.252      0.000      -6.476      -3.720\n",
      "C(YYYYMM)[T.198605]    -5.1223      0.705     -7.266      0.000      -6.504      -3.741\n",
      "C(YYYYMM)[T.198606]    -5.3105      0.667     -7.959      0.000      -6.618      -4.003\n",
      "C(YYYYMM)[T.198607]    -5.3773      0.688     -7.814      0.000      -6.726      -4.028\n",
      "C(YYYYMM)[T.198608]    -5.2869      0.689     -7.669      0.000      -6.638      -3.936\n",
      "C(YYYYMM)[T.198609]    -6.0152      0.655     -9.187      0.000      -7.298      -4.732\n",
      "C(YYYYMM)[T.198610]    -5.5906      0.655     -8.531      0.000      -6.875      -4.306\n",
      "C(YYYYMM)[T.198611]    -5.7521      0.680     -8.454      0.000      -7.086      -4.419\n",
      "C(YYYYMM)[T.198612]    -5.4750      0.679     -8.060      0.000      -6.806      -4.144\n",
      "C(YYYYMM)[T.198701]    -5.8485      0.663     -8.821      0.000      -7.148      -4.549\n",
      "C(YYYYMM)[T.198702]    -5.3222      0.677     -7.856      0.000      -6.650      -3.994\n",
      "C(YYYYMM)[T.198703]    -5.7120      0.656     -8.706      0.000      -6.998      -4.426\n",
      "C(YYYYMM)[T.198704]    -5.5817      0.676     -8.258      0.000      -6.907      -4.257\n",
      "C(YYYYMM)[T.198705]    -5.5229      0.675     -8.180      0.000      -6.846      -4.200\n",
      "C(YYYYMM)[T.198706]    -5.6944      0.655     -8.689      0.000      -6.979      -4.410\n",
      "C(YYYYMM)[T.198707]    -5.5947      0.670     -8.351      0.000      -6.908      -4.282\n",
      "C(YYYYMM)[T.198708]    -5.5941      0.664     -8.423      0.000      -6.896      -4.292\n",
      "C(YYYYMM)[T.198709]    -5.4772      0.686     -7.980      0.000      -6.822      -4.132\n",
      "C(YYYYMM)[T.198710]    -5.4541      0.676     -8.070      0.000      -6.779      -4.130\n",
      "C(YYYYMM)[T.198711]    -5.2681      0.685     -7.688      0.000      -6.611      -3.925\n",
      "C(YYYYMM)[T.198712]    -5.3745      0.696     -7.720      0.000      -6.739      -4.010\n",
      "C(YYYYMM)[T.198801]    -4.9552      0.697     -7.107      0.000      -6.322      -3.589\n",
      "C(YYYYMM)[T.198802]    -5.1878      0.703     -7.377      0.000      -6.566      -3.809\n",
      "C(YYYYMM)[T.198803]    -5.5664      0.680     -8.183      0.000      -6.900      -4.233\n",
      "C(YYYYMM)[T.198804]    -5.1563      0.695     -7.423      0.000      -6.518      -3.795\n",
      "C(YYYYMM)[T.198805]    -4.6801      0.718     -6.515      0.000      -6.088      -3.272\n",
      "C(YYYYMM)[T.198806]    -4.9793      0.709     -7.020      0.000      -6.369      -3.589\n",
      "C(YYYYMM)[T.198807]    -4.6706      0.681     -6.858      0.000      -6.005      -3.336\n",
      "C(YYYYMM)[T.198808]    -4.7554      0.688     -6.915      0.000      -6.103      -3.408\n",
      "C(YYYYMM)[T.198809]    -4.8745      0.715     -6.815      0.000      -6.276      -3.473\n",
      "C(YYYYMM)[T.198810]    -4.7845      0.695     -6.886      0.000      -6.146      -3.423\n",
      "C(YYYYMM)[T.198811]    -4.4521      0.728     -6.113      0.000      -5.880      -3.025\n",
      "C(YYYYMM)[T.198812]    -5.1321      0.678     -7.566      0.000      -6.462      -3.803\n",
      "C(YYYYMM)[T.198901]    -5.2211      0.690     -7.569      0.000      -6.573      -3.869\n",
      "C(YYYYMM)[T.198902]    -4.9769      0.695     -7.159      0.000      -6.339      -3.614\n",
      "C(YYYYMM)[T.198903]    -4.9941      0.693     -7.202      0.000      -6.353      -3.635\n",
      "C(YYYYMM)[T.198904]    -5.1469      0.671     -7.666      0.000      -6.463      -3.831\n",
      "C(YYYYMM)[T.198905]    -4.6470      0.712     -6.522      0.000      -6.043      -3.251\n",
      "C(YYYYMM)[T.198906]    -5.1302      0.691     -7.429      0.000      -6.484      -3.777\n",
      "C(YYYYMM)[T.198907]    -5.3085      0.697     -7.614      0.000      -6.675      -3.942\n",
      "C(YYYYMM)[T.198908]    -5.7121      0.692     -8.252      0.000      -7.069      -4.355\n",
      "C(YYYYMM)[T.198909]    -5.3744      0.704     -7.637      0.000      -6.754      -3.995\n",
      "C(YYYYMM)[T.198910]    -5.4634      0.683     -8.001      0.000      -6.802      -4.125\n",
      "C(YYYYMM)[T.198911]    -5.2016      0.694     -7.492      0.000      -6.562      -3.841\n",
      "C(YYYYMM)[T.198912]    -5.5399      0.671     -8.258      0.000      -6.855      -4.225\n",
      "C(YYYYMM)[T.199001]    -5.0200      0.706     -7.109      0.000      -6.404      -3.636\n",
      "C(YYYYMM)[T.199002]    -4.5264      0.737     -6.145      0.000      -5.970      -3.083\n",
      "C(YYYYMM)[T.199003]    -5.6072      0.678     -8.272      0.000      -6.936      -4.279\n",
      "C(YYYYMM)[T.199004]    -5.6220      0.694     -8.102      0.000      -6.982      -4.262\n",
      "C(YYYYMM)[T.199005]    -5.8752      0.669     -8.787      0.000      -7.186      -4.565\n",
      "C(YYYYMM)[T.199006]    -5.6007      0.678     -8.266      0.000      -6.929      -4.273\n",
      "C(YYYYMM)[T.199007]    -5.7709      0.663     -8.699      0.000      -7.071      -4.471\n",
      "C(YYYYMM)[T.199008]    -4.4977      0.715     -6.292      0.000      -5.899      -3.097\n",
      "C(YYYYMM)[T.199009]    -4.6698      0.689     -6.778      0.000      -6.020      -3.320\n",
      "C(YYYYMM)[T.199010]    -4.3924      0.705     -6.228      0.000      -5.775      -3.010\n",
      "C(YYYYMM)[T.199011]    -4.3211      0.710     -6.085      0.000      -5.713      -2.929\n",
      "C(YYYYMM)[T.199012]    -4.3958      0.706     -6.223      0.000      -5.780      -3.011\n",
      "C(YYYYMM)[T.199101]    -4.3294      0.716     -6.048      0.000      -5.733      -2.926\n",
      "C(YYYYMM)[T.199102]    -4.4582      0.722     -6.173      0.000      -5.874      -3.043\n",
      "C(YYYYMM)[T.199103]    -4.5770      0.719     -6.366      0.000      -5.986      -3.168\n",
      "C(YYYYMM)[T.199104]    -4.3837      0.743     -5.900      0.000      -5.840      -2.927\n",
      "C(YYYYMM)[T.199105]    -4.6819      0.746     -6.275      0.000      -6.144      -3.220\n",
      "C(YYYYMM)[T.199106]    -5.0076      0.715     -7.001      0.000      -6.409      -3.606\n",
      "C(YYYYMM)[T.199107]    -5.5130      0.684     -8.061      0.000      -6.853      -4.173\n",
      "C(YYYYMM)[T.199108]    -5.2801      0.719     -7.341      0.000      -6.690      -3.870\n",
      "C(YYYYMM)[T.199109]    -5.9016      0.658     -8.966      0.000      -7.192      -4.612\n",
      "C(YYYYMM)[T.199110]    -5.2058      0.708     -7.351      0.000      -6.594      -3.818\n",
      "C(YYYYMM)[T.199111]    -4.9817      0.736     -6.767      0.000      -6.425      -3.539\n",
      "C(YYYYMM)[T.199112]    -4.4890      0.773     -5.807      0.000      -6.004      -2.974\n",
      "C(YYYYMM)[T.199201]    -4.7026      0.729     -6.453      0.000      -6.131      -3.274\n",
      "C(YYYYMM)[T.199202]    -5.2302      0.758     -6.904      0.000      -6.715      -3.745\n",
      "C(YYYYMM)[T.199203]    -5.6772      0.670     -8.477      0.000      -6.990      -4.365\n",
      "C(YYYYMM)[T.199204]    -5.3225      0.695     -7.661      0.000      -6.684      -3.961\n",
      "C(YYYYMM)[T.199205]    -5.4255      0.686     -7.903      0.000      -6.771      -4.080\n",
      "C(YYYYMM)[T.199206]    -5.5655      0.677     -8.217      0.000      -6.893      -4.238\n",
      "C(YYYYMM)[T.199207]    -6.0393      0.665     -9.087      0.000      -7.342      -4.737\n",
      "C(YYYYMM)[T.199208]    -5.1670      0.713     -7.244      0.000      -6.565      -3.769\n",
      "C(YYYYMM)[T.199209]    -5.3853      0.700     -7.697      0.000      -6.756      -4.014\n",
      "C(YYYYMM)[T.199210]    -5.5067      0.711     -7.743      0.000      -6.901      -4.113\n",
      "C(YYYYMM)[T.199211]    -5.0947      0.733     -6.951      0.000      -6.531      -3.658\n",
      "C(YYYYMM)[T.199212]    -5.9882      0.654     -9.158      0.000      -7.270      -4.707\n",
      "C(YYYYMM)[T.199301]    -5.9130      0.658     -8.982      0.000      -7.203      -4.623\n",
      "C(YYYYMM)[T.199302]    -4.9975      0.725     -6.891      0.000      -6.419      -3.576\n",
      "C(YYYYMM)[T.199303]    -5.0218      0.711     -7.063      0.000      -6.415      -3.628\n",
      "C(YYYYMM)[T.199304]    -5.1144      0.726     -7.048      0.000      -6.537      -3.692\n",
      "C(YYYYMM)[T.199305]    -5.2892      0.710     -7.448      0.000      -6.681      -3.897\n",
      "C(YYYYMM)[T.199306]    -5.6774      0.683     -8.308      0.000      -7.017      -4.338\n",
      "C(YYYYMM)[T.199307]    -5.5073      0.721     -7.639      0.000      -6.920      -4.094\n",
      "C(YYYYMM)[T.199308]    -5.1017      0.723     -7.056      0.000      -6.519      -3.685\n",
      "C(YYYYMM)[T.199309]    -5.0767      0.737     -6.890      0.000      -6.521      -3.633\n",
      "C(YYYYMM)[T.199310]    -5.5862      0.696     -8.025      0.000      -6.951      -4.222\n",
      "C(YYYYMM)[T.199311]    -6.1298      0.664     -9.236      0.000      -7.431      -4.829\n",
      "C(YYYYMM)[T.199312]    -6.1969      0.657     -9.432      0.000      -7.485      -4.909\n",
      "C(YYYYMM)[T.199401]    -6.0135      0.657     -9.152      0.000      -7.301      -4.726\n",
      "C(YYYYMM)[T.199402]    -5.8749      0.702     -8.370      0.000      -7.251      -4.499\n",
      "C(YYYYMM)[T.199403]    -5.5720      0.703     -7.923      0.000      -6.950      -4.194\n",
      "C(YYYYMM)[T.199404]    -5.4839      0.724     -7.576      0.000      -6.903      -4.065\n",
      "C(YYYYMM)[T.199405]    -5.8234      0.682     -8.534      0.000      -7.161      -4.486\n",
      "C(YYYYMM)[T.199406]    -5.7177      0.698     -8.190      0.000      -7.086      -4.349\n",
      "C(YYYYMM)[T.199407]    -5.2301      0.716     -7.301      0.000      -6.634      -3.826\n",
      "C(YYYYMM)[T.199408]    -5.2876      0.690     -7.665      0.000      -6.640      -3.936\n",
      "C(YYYYMM)[T.199409]    -5.2412      0.707     -7.416      0.000      -6.626      -3.856\n",
      "C(YYYYMM)[T.199410]    -6.1141      0.674     -9.071      0.000      -7.435      -4.793\n",
      "C(YYYYMM)[T.199411]    -5.0879      0.724     -7.031      0.000      -6.506      -3.670\n",
      "C(YYYYMM)[T.199412]    -5.9239      0.679     -8.723      0.000      -7.255      -4.593\n",
      "C(YYYYMM)[T.199501]    -6.1622      0.655     -9.408      0.000      -7.446      -4.878\n",
      "C(YYYYMM)[T.199502]    -6.3456      0.652     -9.728      0.000      -7.624      -5.067\n",
      "C(YYYYMM)[T.199503]    -5.6671      0.692     -8.188      0.000      -7.024      -4.311\n",
      "C(YYYYMM)[T.199504]    -5.9182      0.665     -8.902      0.000      -7.221      -4.615\n",
      "C(YYYYMM)[T.199505]    -5.5083      0.696     -7.911      0.000      -6.873      -4.144\n",
      "C(YYYYMM)[T.199506]    -5.8526      0.692     -8.454      0.000      -7.209      -4.496\n",
      "C(YYYYMM)[T.199507]    -6.1750      0.675     -9.144      0.000      -7.499      -4.851\n",
      "C(YYYYMM)[T.199508]    -6.0170      0.681     -8.837      0.000      -7.352      -4.682\n",
      "C(YYYYMM)[T.199509]    -6.2401      0.682     -9.151      0.000      -7.577      -4.904\n",
      "C(YYYYMM)[T.199510]    -6.5856      0.664     -9.911      0.000      -7.888      -5.283\n",
      "C(YYYYMM)[T.199511]    -6.1581      0.677     -9.098      0.000      -7.485      -4.831\n",
      "C(YYYYMM)[T.199512]    -6.5668      0.655    -10.021      0.000      -7.851      -5.282\n",
      "C(YYYYMM)[T.199601]    -6.3329      0.688     -9.208      0.000      -7.681      -4.985\n",
      "C(YYYYMM)[T.199602]    -5.8281      0.699     -8.340      0.000      -7.198      -4.458\n",
      "C(YYYYMM)[T.199603]    -5.8804      0.687     -8.556      0.000      -7.227      -4.533\n",
      "C(YYYYMM)[T.199604]    -5.5445      0.727     -7.632      0.000      -6.968      -4.121\n",
      "C(YYYYMM)[T.199605]    -4.9586      0.733     -6.769      0.000      -6.394      -3.523\n",
      "C(YYYYMM)[T.199606]    -6.0421      0.712     -8.489      0.000      -7.437      -4.647\n",
      "C(YYYYMM)[T.199607]    -5.6058      0.704     -7.958      0.000      -6.986      -4.225\n",
      "C(YYYYMM)[T.199608]    -5.6958      0.689     -8.268      0.000      -7.046      -4.345\n",
      "C(YYYYMM)[T.199609]    -6.0475      0.671     -9.007      0.000      -7.363      -4.732\n",
      "C(YYYYMM)[T.199610]    -5.5759      0.698     -7.990      0.000      -6.944      -4.208\n",
      "C(YYYYMM)[T.199611]    -5.7890      0.689     -8.407      0.000      -7.139      -4.439\n",
      "C(YYYYMM)[T.199612]    -6.0520      0.667     -9.077      0.000      -7.359      -4.745\n",
      "C(YYYYMM)[T.199701]    -6.0180      0.698     -8.619      0.000      -7.387      -4.649\n",
      "C(YYYYMM)[T.199702]    -6.3280      0.653     -9.687      0.000      -7.608      -5.048\n",
      "C(YYYYMM)[T.199703]    -6.2794      0.664     -9.461      0.000      -7.580      -4.979\n",
      "C(YYYYMM)[T.199704]    -6.3929      0.655     -9.764      0.000      -7.676      -5.110\n",
      "C(YYYYMM)[T.199705]    -6.1687      0.663     -9.307      0.000      -7.468      -4.870\n",
      "C(YYYYMM)[T.199706]    -6.1458      0.662     -9.282      0.000      -7.443      -4.848\n",
      "C(YYYYMM)[T.199707]    -6.7117      0.651    -10.309      0.000      -7.988      -5.436\n",
      "C(YYYYMM)[T.199708]    -6.6341      0.653    -10.158      0.000      -7.914      -5.354\n",
      "C(YYYYMM)[T.199709]    -6.4926      0.649    -10.004      0.000      -7.765      -5.221\n",
      "C(YYYYMM)[T.199710]    -6.7300      0.642    -10.477      0.000      -7.989      -5.471\n",
      "C(YYYYMM)[T.199711]    -6.6223      0.647    -10.243      0.000      -7.890      -5.355\n",
      "C(YYYYMM)[T.199712]    -6.2167      0.658     -9.453      0.000      -7.506      -4.928\n",
      "C(YYYYMM)[T.199801]    -6.5329      0.648    -10.074      0.000      -7.804      -5.262\n",
      "C(YYYYMM)[T.199802]    -6.7717      0.643    -10.528      0.000      -8.032      -5.511\n",
      "C(YYYYMM)[T.199803]    -6.7809      0.640    -10.591      0.000      -8.036      -5.526\n",
      "C(YYYYMM)[T.199804]    -6.8610      0.638    -10.761      0.000      -8.111      -5.611\n",
      "C(YYYYMM)[T.199805]    -6.5732      0.644    -10.215      0.000      -7.834      -5.312\n",
      "C(YYYYMM)[T.199806]    -6.7301      0.642    -10.484      0.000      -7.988      -5.472\n",
      "C(YYYYMM)[T.199807]    -6.7573      0.642    -10.519      0.000      -8.016      -5.498\n",
      "C(YYYYMM)[T.199808]    -6.9986      0.640    -10.928      0.000      -8.254      -5.743\n",
      "C(YYYYMM)[T.199809]    -6.7788      0.642    -10.551      0.000      -8.038      -5.520\n",
      "C(YYYYMM)[T.199810]    -6.8969      0.639    -10.788      0.000      -8.150      -5.644\n",
      "C(YYYYMM)[T.199811]    -6.7536      0.646    -10.458      0.000      -8.019      -5.488\n",
      "C(YYYYMM)[T.199812]    -6.9431      0.639    -10.861      0.000      -8.196      -5.690\n",
      "C(YYYYMM)[T.199901]    -6.9622      0.638    -10.916      0.000      -8.212      -5.712\n",
      "C(YYYYMM)[T.199902]    -6.9532      0.640    -10.870      0.000      -8.207      -5.699\n",
      "C(YYYYMM)[T.199903]    -6.7443      0.644    -10.470      0.000      -8.007      -5.482\n",
      "C(YYYYMM)[T.199904]    -6.8324      0.637    -10.726      0.000      -8.081      -5.584\n",
      "C(YYYYMM)[T.199905]    -6.8765      0.639    -10.753      0.000      -8.130      -5.623\n",
      "C(YYYYMM)[T.199906]    -6.6792      0.640    -10.435      0.000      -7.934      -5.425\n",
      "C(YYYYMM)[T.199907]    -6.7982      0.639    -10.644      0.000      -8.050      -5.546\n",
      "C(YYYYMM)[T.199908]    -6.9933      0.639    -10.936      0.000      -8.247      -5.740\n",
      "C(YYYYMM)[T.199909]    -6.7094      0.642    -10.447      0.000      -7.968      -5.451\n",
      "C(YYYYMM)[T.199910]    -6.7236      0.641    -10.490      0.000      -7.980      -5.467\n",
      "C(YYYYMM)[T.199911]    -6.7327      0.640    -10.521      0.000      -7.987      -5.478\n",
      "C(YYYYMM)[T.199912]    -6.2113      0.648     -9.592      0.000      -7.481      -4.942\n",
      "C(YYYYMM)[T.200001]    -6.3174      0.644     -9.814      0.000      -7.579      -5.056\n",
      "C(YYYYMM)[T.200002]    -6.3911      0.643     -9.937      0.000      -7.652      -5.131\n",
      "C(YYYYMM)[T.200003]    -6.5009      0.642    -10.127      0.000      -7.759      -5.243\n",
      "C(YYYYMM)[T.200004]    -6.5434      0.638    -10.258      0.000      -7.794      -5.293\n",
      "C(YYYYMM)[T.200005]    -6.5806      0.640    -10.287      0.000      -7.834      -5.327\n",
      "C(YYYYMM)[T.200006]    -6.4449      0.648     -9.945      0.000      -7.715      -5.175\n",
      "C(YYYYMM)[T.200007]    -6.2479      0.650     -9.607      0.000      -7.523      -4.973\n",
      "C(YYYYMM)[T.200008]    -6.3235      0.653     -9.688      0.000      -7.603      -5.044\n",
      "C(YYYYMM)[T.200009]    -6.0365      0.657     -9.182      0.000      -7.325      -4.748\n",
      "C(YYYYMM)[T.200010]    -5.9097      0.656     -9.009      0.000      -7.195      -4.624\n",
      "C(YYYYMM)[T.200011]    -6.1290      0.671     -9.137      0.000      -7.444      -4.814\n",
      "C(YYYYMM)[T.200012]    -6.4682      0.654     -9.890      0.000      -7.750      -5.186\n",
      "C(YYYYMM)[T.200101]    -6.2442      0.659     -9.475      0.000      -7.536      -4.953\n",
      "C(YYYYMM)[T.200102]    -6.1642      0.671     -9.180      0.000      -7.480      -4.848\n",
      "C(YYYYMM)[T.200103]    -6.2657      0.661     -9.482      0.000      -7.561      -4.971\n",
      "C(YYYYMM)[T.200104]    -6.0022      0.661     -9.080      0.000      -7.298      -4.707\n",
      "C(YYYYMM)[T.200105]    -6.0549      0.656     -9.225      0.000      -7.341      -4.768\n",
      "C(YYYYMM)[T.200106]    -5.7620      0.666     -8.653      0.000      -7.067      -4.457\n",
      "C(YYYYMM)[T.200107]    -6.4532      0.660     -9.777      0.000      -7.747      -5.160\n",
      "C(YYYYMM)[T.200108]    -6.4634      0.658     -9.823      0.000      -7.753      -5.174\n",
      "C(YYYYMM)[T.200109]    -5.7762      0.675     -8.554      0.000      -7.100      -4.453\n",
      "C(YYYYMM)[T.200110]    -5.6915      0.692     -8.221      0.000      -7.048      -4.335\n",
      "C(YYYYMM)[T.200111]    -5.9690      0.669     -8.919      0.000      -7.281      -4.657\n",
      "C(YYYYMM)[T.200112]    -5.7524      0.668     -8.609      0.000      -7.062      -4.443\n",
      "C(YYYYMM)[T.200201]    -6.4196      0.655     -9.804      0.000      -7.703      -5.136\n",
      "C(YYYYMM)[T.200202]    -6.3308      0.653     -9.694      0.000      -7.611      -5.051\n",
      "C(YYYYMM)[T.200203]    -6.1255      0.662     -9.257      0.000      -7.422      -4.829\n",
      "C(YYYYMM)[T.200204]    -6.2386      0.652     -9.576      0.000      -7.515      -4.962\n",
      "C(YYYYMM)[T.200205]    -6.4881      0.645    -10.065      0.000      -7.752      -5.225\n",
      "C(YYYYMM)[T.200206]    -6.1606      0.649     -9.498      0.000      -7.432      -4.889\n",
      "C(YYYYMM)[T.200207]    -6.6447      0.646    -10.291      0.000      -7.910      -5.379\n",
      "C(YYYYMM)[T.200208]    -6.6023      0.643    -10.267      0.000      -7.863      -5.342\n",
      "C(YYYYMM)[T.200209]    -6.2701      0.650     -9.641      0.000      -7.545      -4.995\n",
      "C(YYYYMM)[T.200210]    -6.2182      0.651     -9.550      0.000      -7.494      -4.942\n",
      "C(YYYYMM)[T.200211]    -6.4239      0.648     -9.910      0.000      -7.694      -5.153\n",
      "C(YYYYMM)[T.200212]    -6.3146      0.653     -9.669      0.000      -7.595      -5.035\n",
      "C(YYYYMM)[T.200301]    -6.8423      0.644    -10.632      0.000      -8.104      -5.581\n",
      "C(YYYYMM)[T.200302]    -6.2108      0.650     -9.549      0.000      -7.486      -4.936\n",
      "C(YYYYMM)[T.200303]    -5.9137      0.652     -9.069      0.000      -7.192      -4.636\n",
      "C(YYYYMM)[T.200304]    -5.8307      0.667     -8.738      0.000      -7.139      -4.523\n",
      "C(YYYYMM)[T.200305]    -6.4193      0.651     -9.863      0.000      -7.695      -5.144\n",
      "C(YYYYMM)[T.200306]    -6.4869      0.652     -9.943      0.000      -7.766      -5.208\n",
      "C(YYYYMM)[T.200307]    -6.7422      0.648    -10.400      0.000      -8.013      -5.472\n",
      "C(YYYYMM)[T.200308]    -6.5627      0.645    -10.170      0.000      -7.827      -5.298\n",
      "C(YYYYMM)[T.200309]    -5.9968      0.654     -9.164      0.000      -7.279      -4.714\n",
      "C(YYYYMM)[T.200310]    -6.3992      0.650     -9.846      0.000      -7.673      -5.125\n",
      "C(YYYYMM)[T.200311]    -6.2195      0.649     -9.576      0.000      -7.492      -4.946\n",
      "C(YYYYMM)[T.200312]    -6.6906      0.639    -10.468      0.000      -7.943      -5.438\n",
      "C(YYYYMM)[T.200401]    -6.4704      0.645    -10.036      0.000      -7.734      -5.207\n",
      "C(YYYYMM)[T.200402]    -6.2599      0.649     -9.651      0.000      -7.531      -4.989\n",
      "C(YYYYMM)[T.200403]    -6.2509      0.646     -9.677      0.000      -7.517      -4.985\n",
      "C(YYYYMM)[T.200404]    -5.9529      0.648     -9.184      0.000      -7.223      -4.682\n",
      "C(YYYYMM)[T.200405]    -5.9074      0.645     -9.154      0.000      -7.172      -4.643\n",
      "C(YYYYMM)[T.200406]    -5.9970      0.642     -9.346      0.000      -7.255      -4.739\n",
      "C(YYYYMM)[T.200407]    -6.5113      0.640    -10.172      0.000      -7.766      -5.257\n",
      "C(YYYYMM)[T.200408]    -6.6255      0.640    -10.350      0.000      -7.880      -5.371\n",
      "C(YYYYMM)[T.200409]    -6.6337      0.641    -10.343      0.000      -7.891      -5.377\n",
      "C(YYYYMM)[T.200410]    -6.4306      0.643    -10.006      0.000      -7.690      -5.171\n",
      "C(YYYYMM)[T.200411]    -6.6016      0.639    -10.323      0.000      -7.855      -5.348\n",
      "C(YYYYMM)[T.200412]    -6.6176      0.637    -10.382      0.000      -7.867      -5.368\n",
      "C(YYYYMM)[T.200501]    -6.3990      0.644     -9.939      0.000      -7.661      -5.137\n",
      "C(YYYYMM)[T.200502]    -6.6485      0.640    -10.382      0.000      -7.904      -5.393\n",
      "C(YYYYMM)[T.200503]    -6.2699      0.642     -9.764      0.000      -7.528      -5.011\n",
      "C(YYYYMM)[T.200504]    -6.2647      0.641     -9.773      0.000      -7.521      -5.008\n",
      "C(YYYYMM)[T.200505]    -6.4774      0.642    -10.089      0.000      -7.736      -5.219\n",
      "C(YYYYMM)[T.200506]    -6.3157      0.642     -9.844      0.000      -7.573      -5.058\n",
      "C(YYYYMM)[T.200507]    -6.3751      0.642     -9.925      0.000      -7.634      -5.116\n",
      "C(YYYYMM)[T.200508]    -6.3683      0.642     -9.921      0.000      -7.626      -5.110\n",
      "C(YYYYMM)[T.200509]    -4.8207      0.675     -7.137      0.000      -6.145      -3.497\n",
      "C(YYYYMM)[T.200510]    -4.4311      0.678     -6.535      0.000      -5.760      -3.102\n",
      "C(YYYYMM)[T.200511]    -5.7102      0.662     -8.622      0.000      -7.008      -4.412\n",
      "C(YYYYMM)[T.200512]    -5.9554      0.657     -9.060      0.000      -7.244      -4.667\n",
      "C(YYYYMM)[T.200601]    -6.3189      0.645     -9.791      0.000      -7.584      -5.054\n",
      "C(YYYYMM)[T.200602]    -6.6889      0.641    -10.442      0.000      -7.944      -5.433\n",
      "C(YYYYMM)[T.200603]    -6.4470      0.643    -10.024      0.000      -7.708      -5.186\n",
      "C(YYYYMM)[T.200604]    -5.9762      0.650     -9.197      0.000      -7.250      -4.703\n",
      "C(YYYYMM)[T.200605]    -5.4687      0.650     -8.418      0.000      -6.742      -4.195\n",
      "C(YYYYMM)[T.200606]    -5.7944      0.661     -8.770      0.000      -7.089      -4.499\n",
      "C(YYYYMM)[T.200607]    -6.4168      0.643     -9.972      0.000      -7.678      -5.156\n",
      "C(YYYYMM)[T.200608]    -5.5858      0.659     -8.473      0.000      -6.878      -4.294\n",
      "C(YYYYMM)[T.200609]    -6.2981      0.648     -9.725      0.000      -7.567      -5.029\n",
      "C(YYYYMM)[T.200610]    -6.3620      0.640     -9.935      0.000      -7.617      -5.107\n",
      "C(YYYYMM)[T.200611]    -6.4946      0.638    -10.180      0.000      -7.745      -5.244\n",
      "C(YYYYMM)[T.200612]    -6.4437      0.643    -10.020      0.000      -7.704      -5.183\n",
      "C(YYYYMM)[T.200701]    -6.5792      0.645    -10.203      0.000      -7.843      -5.315\n",
      "C(YYYYMM)[T.200702]    -6.5444      0.640    -10.226      0.000      -7.799      -5.290\n",
      "C(YYYYMM)[T.200703]    -6.5797      0.644    -10.222      0.000      -7.841      -5.318\n",
      "C(YYYYMM)[T.200704]    -6.3900      0.643     -9.933      0.000      -7.651      -5.129\n",
      "C(YYYYMM)[T.200705]    -6.0836      0.646     -9.412      0.000      -7.350      -4.817\n",
      "C(YYYYMM)[T.200706]    -6.0260      0.647     -9.315      0.000      -7.294      -4.758\n",
      "C(YYYYMM)[T.200707]    -5.7422      0.653     -8.788      0.000      -7.023      -4.462\n",
      "C(YYYYMM)[T.200708]    -6.0688      0.651     -9.327      0.000      -7.344      -4.794\n",
      "C(YYYYMM)[T.200709]    -5.8625      0.660     -8.886      0.000      -7.156      -4.569\n",
      "C(YYYYMM)[T.200710]    -6.5370      0.644    -10.153      0.000      -7.799      -5.275\n",
      "C(YYYYMM)[T.200711]    -5.7280      0.653     -8.765      0.000      -7.009      -4.447\n",
      "C(YYYYMM)[T.200712]    -5.6265      0.660     -8.521      0.000      -6.921      -4.332\n",
      "C(YYYYMM)[T.200801]    -6.0494      0.646     -9.368      0.000      -7.315      -4.784\n",
      "C(YYYYMM)[T.200802]    -5.9623      0.649     -9.188      0.000      -7.234      -4.690\n",
      "C(YYYYMM)[T.200803]    -5.3843      0.658     -8.187      0.000      -6.673      -4.095\n",
      "C(YYYYMM)[T.200804]    -4.9565      0.663     -7.478      0.000      -6.256      -3.657\n",
      "C(YYYYMM)[T.200805]    -3.8034      0.673     -5.648      0.000      -5.123      -2.483\n",
      "C(YYYYMM)[T.200806]    -3.6725      0.679     -5.411      0.000      -5.003      -2.342\n",
      "C(YYYYMM)[T.200807]    -3.7966      0.672     -5.648      0.000      -5.114      -2.479\n",
      "C(YYYYMM)[T.200808]    -4.8041      0.666     -7.210      0.000      -6.110      -3.498\n",
      "C(YYYYMM)[T.200809]    -5.2108      0.664     -7.850      0.000      -6.512      -3.910\n",
      "C(YYYYMM)[T.200810]    -4.8210      0.670     -7.199      0.000      -6.134      -3.508\n",
      "C(YYYYMM)[T.200811]    -4.4060      0.684     -6.439      0.000      -5.747      -3.065\n",
      "C(YYYYMM)[T.200812]    -4.9033      0.682     -7.185      0.000      -6.241      -3.566\n",
      "C(YYYYMM)[T.200901]    -4.7757      0.686     -6.963      0.000      -6.120      -3.431\n",
      "C(YYYYMM)[T.200902]    -3.7585      0.700     -5.373      0.000      -5.130      -2.388\n",
      "C(YYYYMM)[T.200903]    -4.9325      0.679     -7.265      0.000      -6.263      -3.602\n",
      "C(YYYYMM)[T.200904]    -4.7352      0.682     -6.946      0.000      -6.071      -3.399\n",
      "C(YYYYMM)[T.200905]    -5.0927      0.678     -7.511      0.000      -6.422      -3.764\n",
      "C(YYYYMM)[T.200906]    -5.3487      0.670     -7.982      0.000      -6.662      -4.035\n",
      "C(YYYYMM)[T.200907]    -5.3132      0.671     -7.922      0.000      -6.628      -3.999\n",
      "C(YYYYMM)[T.200908]    -5.2823      0.671     -7.875      0.000      -6.597      -3.968\n",
      "C(YYYYMM)[T.200909]    -5.6181      0.670     -8.380      0.000      -6.932      -4.304\n",
      "C(YYYYMM)[T.200910]    -5.8168      0.655     -8.880      0.000      -7.101      -4.533\n",
      "C(YYYYMM)[T.200911]    -5.4781      0.670     -8.177      0.000      -6.791      -4.165\n",
      "C(YYYYMM)[T.200912]    -5.7298      0.665     -8.618      0.000      -7.033      -4.427\n",
      "C(YYYYMM)[T.201001]    -5.2292      0.668     -7.834      0.000      -6.537      -3.921\n",
      "C(YYYYMM)[T.201002]    -5.3621      0.669     -8.016      0.000      -6.673      -4.051\n",
      "C(YYYYMM)[T.201003]    -5.7841      0.668     -8.656      0.000      -7.094      -4.474\n",
      "C(YYYYMM)[T.201004]    -5.5433      0.663     -8.358      0.000      -6.843      -4.243\n",
      "C(YYYYMM)[T.201005]    -5.4322      0.658     -8.259      0.000      -6.721      -4.143\n",
      "C(YYYYMM)[T.201006]    -5.8373      0.655     -8.906      0.000      -7.122      -4.553\n",
      "C(YYYYMM)[T.201007]    -6.1559      0.650     -9.475      0.000      -7.429      -4.882\n",
      "C(YYYYMM)[T.201008]    -5.6852      0.656     -8.669      0.000      -6.971      -4.400\n",
      "C(YYYYMM)[T.201009]    -5.8854      0.669     -8.793      0.000      -7.197      -4.573\n",
      "C(YYYYMM)[T.201010]    -5.5955      0.661     -8.468      0.000      -6.891      -4.300\n",
      "C(YYYYMM)[T.201011]    -5.8699      0.651     -9.012      0.000      -7.147      -4.593\n",
      "C(YYYYMM)[T.201012]    -5.5306      0.661     -8.373      0.000      -6.825      -4.236\n",
      "C(YYYYMM)[T.201101]    -5.2203      0.655     -7.974      0.000      -6.503      -3.937\n",
      "C(YYYYMM)[T.201102]    -5.5083      0.658     -8.370      0.000      -6.798      -4.219\n",
      "C(YYYYMM)[T.201103]    -4.8274      0.656     -7.358      0.000      -6.113      -3.542\n",
      "C(YYYYMM)[T.201104]    -4.7908      0.662     -7.241      0.000      -6.088      -3.494\n",
      "C(YYYYMM)[T.201105]    -5.1604      0.652     -7.917      0.000      -6.438      -3.883\n",
      "C(YYYYMM)[T.201106]    -5.1683      0.656     -7.876      0.000      -6.455      -3.882\n",
      "C(YYYYMM)[T.201107]    -5.4553      0.658     -8.296      0.000      -6.744      -4.167\n",
      "C(YYYYMM)[T.201108]    -5.4588      0.656     -8.323      0.000      -6.744      -4.173\n",
      "C(YYYYMM)[T.201109]    -5.5207      0.655     -8.431      0.000      -6.804      -4.237\n",
      "C(YYYYMM)[T.201110]    -5.9090      0.649     -9.106      0.000      -7.181      -4.637\n",
      "C(YYYYMM)[T.201111]    -5.8550      0.652     -8.983      0.000      -7.133      -4.577\n",
      "C(YYYYMM)[T.201112]    -6.0125      0.651     -9.235      0.000      -7.288      -4.736\n",
      "C(YYYYMM)[T.201201]    -5.5568      0.656     -8.476      0.000      -6.842      -4.272\n",
      "C(YYYYMM)[T.201202]    -5.9083      0.648     -9.123      0.000      -7.178      -4.639\n",
      "C(YYYYMM)[T.201203]    -4.9722      0.658     -7.552      0.000      -6.263      -3.682\n",
      "C(YYYYMM)[T.201204]    -5.6840      0.650     -8.743      0.000      -6.958      -4.410\n",
      "C(YYYYMM)[T.201205]    -5.9688      0.648     -9.208      0.000      -7.239      -4.698\n",
      "C(YYYYMM)[T.201206]    -5.8083      0.651     -8.919      0.000      -7.085      -4.532\n",
      "C(YYYYMM)[T.201207]    -5.4861      0.660     -8.306      0.000      -6.781      -4.192\n",
      "C(YYYYMM)[T.201208]    -5.3756      0.652     -8.240      0.000      -6.654      -4.097\n",
      "C(YYYYMM)[T.201209]    -5.3026      0.654     -8.106      0.000      -6.585      -4.020\n",
      "C(YYYYMM)[T.201210]    -5.6958      0.662     -8.602      0.000      -6.994      -4.398\n",
      "C(YYYYMM)[T.201211]    -5.4764      0.669     -8.185      0.000      -6.788      -4.165\n",
      "C(YYYYMM)[T.201212]    -5.7185      0.658     -8.695      0.000      -7.008      -4.429\n",
      "C(YYYYMM)[T.201301]    -5.7978      0.654     -8.868      0.000      -7.079      -4.516\n",
      "C(YYYYMM)[T.201302]    -5.5048      0.660     -8.339      0.000      -6.799      -4.211\n",
      "C(YYYYMM)[T.201303]    -5.7953      0.657     -8.824      0.000      -7.083      -4.508\n",
      "C(YYYYMM)[T.201304]    -6.1786      0.652     -9.479      0.000      -7.456      -4.901\n",
      "C(YYYYMM)[T.201305]    -5.5253      0.665     -8.307      0.000      -6.829      -4.222\n",
      "C(YYYYMM)[T.201306]    -6.0866      0.654     -9.313      0.000      -7.368      -4.806\n",
      "C(YYYYMM)[T.201307]    -5.8611      0.660     -8.882      0.000      -7.154      -4.568\n",
      "C(YYYYMM)[T.201308]    -5.4860      0.667     -8.224      0.000      -6.793      -4.178\n",
      "C(YYYYMM)[T.201309]    -5.9774      0.654     -9.135      0.000      -7.260      -4.695\n",
      "C(YYYYMM)[T.201310]    -6.4924      0.651     -9.977      0.000      -7.768      -5.217\n",
      "C(YYYYMM)[T.201311]    -6.5424      0.656     -9.980      0.000      -7.827      -5.258\n",
      "C(YYYYMM)[T.201312]    -6.4581      0.654     -9.871      0.000      -7.740      -5.176\n",
      "C(YYYYMM)[T.201401]    -6.3400      0.653     -9.705      0.000      -7.620      -5.060\n",
      "C(YYYYMM)[T.201402]    -6.0739      0.658     -9.238      0.000      -7.363      -4.785\n",
      "C(YYYYMM)[T.201403]    -6.2361      0.650     -9.599      0.000      -7.509      -4.963\n",
      "C(YYYYMM)[T.201404]    -6.1534      0.652     -9.441      0.000      -7.431      -4.876\n",
      "C(YYYYMM)[T.201405]    -5.9022      0.661     -8.927      0.000      -7.198      -4.606\n",
      "C(YYYYMM)[T.201406]    -6.2333      0.647     -9.641      0.000      -7.501      -4.966\n",
      "C(YYYYMM)[T.201407]    -6.3444      0.645     -9.831      0.000      -7.609      -5.079\n",
      "C(YYYYMM)[T.201408]    -6.0344      0.646     -9.338      0.000      -7.301      -4.768\n",
      "C(YYYYMM)[T.201409]    -6.2857      0.650     -9.667      0.000      -7.560      -5.011\n",
      "C(YYYYMM)[T.201410]    -6.3079      0.649     -9.712      0.000      -7.581      -5.035\n",
      "C(YYYYMM)[T.201411]    -6.3760      0.648     -9.842      0.000      -7.646      -5.106\n",
      "C(YYYYMM)[T.201412]    -6.7055      0.642    -10.437      0.000      -7.965      -5.446\n",
      "C(YYYYMM)[T.201501]    -6.7621      0.642    -10.534      0.000      -8.020      -5.504\n",
      "C(YYYYMM)[T.201502]    -6.5435      0.643    -10.170      0.000      -7.805      -5.282\n",
      "C(YYYYMM)[T.201503]    -6.7633      0.641    -10.558      0.000      -8.019      -5.508\n",
      "C(YYYYMM)[T.201504]    -6.7764      0.641    -10.572      0.000      -8.033      -5.520\n",
      "C(YYYYMM)[T.201505]    -6.6685      0.646    -10.324      0.000      -7.934      -5.403\n",
      "C(YYYYMM)[T.201506]    -6.7627      0.644    -10.503      0.000      -8.025      -5.501\n",
      "C(YYYYMM)[T.201507]    -6.4266      0.655     -9.816      0.000      -7.710      -5.143\n",
      "C(YYYYMM)[T.201508]    -6.3610      0.655     -9.706      0.000      -7.646      -5.076\n",
      "C(YYYYMM)[T.201509]    -6.8127      0.642    -10.606      0.000      -8.072      -5.554\n",
      "C(YYYYMM)[T.201510]    -6.6830      0.648    -10.319      0.000      -7.952      -5.414\n",
      "C(YYYYMM)[T.201511]    -6.6113      0.649    -10.183      0.000      -7.884      -5.339\n",
      "C(YYYYMM)[T.201512]    -6.8491      0.645    -10.615      0.000      -8.114      -5.584\n",
      "C(YYYYMM)[T.201601]    -6.4568      0.650     -9.933      0.000      -7.731      -5.183\n",
      "C(YYYYMM)[T.201602]    -6.4896      0.651     -9.972      0.000      -7.765      -5.214\n",
      "C(YYYYMM)[T.201603]    -6.7770      0.647    -10.481      0.000      -8.044      -5.510\n",
      "C(YYYYMM)[T.201604]    -6.8728      0.644    -10.673      0.000      -8.135      -5.611\n",
      "C(YYYYMM)[T.201605]    -6.8238      0.649    -10.514      0.000      -8.096      -5.552\n",
      "C(YYYYMM)[T.201606]    -7.1157      0.638    -11.150      0.000      -8.366      -5.865\n",
      "C(YYYYMM)[T.201607]    -6.9157      0.641    -10.791      0.000      -8.172      -5.660\n",
      "C(YYYYMM)[T.201608]    -7.0137      0.641    -10.937      0.000      -8.271      -5.757\n",
      "C(YYYYMM)[T.201609]    -6.8754      0.642    -10.704      0.000      -8.134      -5.616\n",
      "C(YYYYMM)[T.201610]    -7.2477      0.640    -11.330      0.000      -8.501      -5.994\n",
      "C(YYYYMM)[T.201611]    -6.9478      0.640    -10.848      0.000      -8.203      -5.693\n",
      "C(YYYYMM)[T.201612]    -7.0622      0.638    -11.067      0.000      -8.313      -5.811\n",
      "C(YYYYMM)[T.201701]    -6.8079      0.639    -10.657      0.000      -8.060      -5.556\n",
      "C(YYYYMM)[T.201702]    -6.7050      0.639    -10.491      0.000      -7.958      -5.452\n",
      "C(YYYYMM)[T.201703]    -6.6792      0.642    -10.399      0.000      -7.938      -5.420\n",
      "C(YYYYMM)[T.201704]    -6.8132      0.643    -10.588      0.000      -8.074      -5.552\n",
      "C(YYYYMM)[T.201705]    -6.8058      0.639    -10.644      0.000      -8.059      -5.553\n",
      "C(YYYYMM)[T.201706]    -6.9810      0.639    -10.923      0.000      -8.234      -5.728\n",
      "C(YYYYMM)[T.201707]    -7.0319      0.638    -11.019      0.000      -8.283      -5.781\n",
      "C(YYYYMM)[T.201708]    -6.9354      0.640    -10.836      0.000      -8.190      -5.681\n",
      "C(YYYYMM)[T.201709]    -6.8558      0.640    -10.716      0.000      -8.110      -5.602\n",
      "C(YYYYMM)[T.201710]    -7.1929      0.640    -11.247      0.000      -8.446      -5.939\n",
      "C(YYYYMM)[T.201711]    -6.9717      0.640    -10.899      0.000      -8.225      -5.718\n",
      "C(YYYYMM)[T.201712]    -6.8527      0.638    -10.741      0.000      -8.103      -5.602\n",
      "C(YYYYMM)[T.201801]    -6.9648      0.637    -10.941      0.000      -8.212      -5.717\n",
      "C(YYYYMM)[T.201802]    -6.6151      0.640    -10.344      0.000      -7.869      -5.362\n",
      "C(YYYYMM)[T.201803]    -6.8076      0.637    -10.690      0.000      -8.056      -5.560\n",
      "C(YYYYMM)[T.201804]    -6.8924      0.641    -10.760      0.000      -8.148      -5.637\n",
      "C(YYYYMM)[T.201805]    -6.8367      0.636    -10.756      0.000      -8.083      -5.591\n",
      "C(YYYYMM)[T.201806]    -6.7513      0.638    -10.582      0.000      -8.002      -5.501\n",
      "C(YYYYMM)[T.201807]    -6.4396      0.645     -9.984      0.000      -7.704      -5.175\n",
      "C(YYYYMM)[T.201808]    -6.4005      0.642     -9.976      0.000      -7.658      -5.143\n",
      "C(YYYYMM)[T.201809]    -6.5598      0.641    -10.239      0.000      -7.815      -5.304\n",
      "C(YYYYMM)[T.201810]    -6.4297      0.646     -9.950      0.000      -7.696      -5.163\n",
      "C(YYYYMM)[T.201811]    -6.5077      0.643    -10.129      0.000      -7.767      -5.248\n",
      "C(YYYYMM)[T.201812]    -6.8489      0.640    -10.708      0.000      -8.103      -5.595\n",
      "C(YYYYMM)[T.201901]    -7.2123      0.636    -11.340      0.000      -8.459      -5.966\n",
      "C(YYYYMM)[T.201902]    -7.1819      0.637    -11.269      0.000      -8.431      -5.933\n",
      "C(YYYYMM)[T.201903]    -7.1494      0.636    -11.243      0.000      -8.396      -5.903\n",
      "C(YYYYMM)[T.201904]    -7.0057      0.640    -10.952      0.000      -8.259      -5.752\n",
      "C(YYYYMM)[T.201905]    -6.6455      0.640    -10.383      0.000      -7.900      -5.391\n",
      "C(YYYYMM)[T.201906]    -6.5581      0.647    -10.141      0.000      -7.826      -5.291\n",
      "C(YYYYMM)[T.201907]    -6.7207      0.644    -10.439      0.000      -7.983      -5.459\n",
      "C(YYYYMM)[T.201908]    -6.5188      0.645    -10.108      0.000      -7.783      -5.255\n",
      "C(YYYYMM)[T.201909]    -6.5380      0.643    -10.167      0.000      -7.798      -5.278\n",
      "C(YYYYMM)[T.201910]    -6.9471      0.640    -10.847      0.000      -8.202      -5.692\n",
      "C(YYYYMM)[T.201911]    -6.8636      0.640    -10.728      0.000      -8.118      -5.610\n",
      "C(YYYYMM)[T.201912]    -7.2221      0.638    -11.312      0.000      -8.473      -5.971\n",
      "C(YYYYMM)[T.202001]    -7.0414      0.637    -11.056      0.000      -8.290      -5.793\n",
      "C(YYYYMM)[T.202002]    -7.1136      0.636    -11.186      0.000      -8.360      -5.867\n",
      "C(YYYYMM)[T.202003]    -6.8360      0.642    -10.653      0.000      -8.094      -5.578\n",
      "C(YYYYMM)[T.202004]    -5.1602      0.663     -7.786      0.000      -6.459      -3.861\n",
      "C(YYYYMM)[T.202005]    -4.4985      0.659     -6.827      0.000      -5.790      -3.207\n",
      "C(YYYYMM)[T.202006]    -5.3978      0.648     -8.328      0.000      -6.668      -4.127\n",
      "C(YYYYMM)[T.202007]    -5.3650      0.655     -8.196      0.000      -6.648      -4.082\n",
      "C(YYYYMM)[T.202008]    -5.6562      0.644     -8.787      0.000      -6.918      -4.395\n",
      "C(YYYYMM)[T.202009]    -5.8511      0.652     -8.981      0.000      -7.128      -4.574\n",
      "C(YYYYMM)[T.202010]    -6.1383      0.645     -9.511      0.000      -7.403      -4.873\n",
      "C(YYYYMM)[T.202011]    -6.1038      0.646     -9.443      0.000      -7.371      -4.837\n",
      "C(YYYYMM)[T.202012]    -6.3452      0.647     -9.807      0.000      -7.613      -5.077\n",
      "C(YYYYMM)[T.202101]    -5.6162      0.658     -8.532      0.000      -6.906      -4.326\n",
      "C(YYYYMM)[T.202102]    -5.3814      0.651     -8.262      0.000      -6.658      -4.105\n",
      "C(YYYYMM)[T.202103]    -5.2874      0.656     -8.060      0.000      -6.573      -4.002\n",
      "C(YYYYMM)[T.202104]    -5.1893      0.650     -7.981      0.000      -6.464      -3.915\n",
      "C(YYYYMM)[T.202105]    -4.0671      0.673     -6.042      0.000      -5.386      -2.748\n",
      "C(YYYYMM)[T.202106]    -3.8101      0.684     -5.571      0.000      -5.150      -2.470\n",
      "C(YYYYMM)[T.202107]    -3.6661      0.675     -5.435      0.000      -4.988      -2.344\n",
      "C(YYYYMM)[T.202108]    -3.6445      0.683     -5.335      0.000      -4.983      -2.305\n",
      "C(YYYYMM)[T.202109]    -3.6176      0.684     -5.286      0.000      -4.959      -2.276\n",
      "C(YYYYMM)[T.202110]    -3.4698      0.682     -5.088      0.000      -4.806      -2.133\n",
      "C(YYYYMM)[T.202111]    -2.9147      0.698     -4.173      0.000      -4.284      -1.546\n",
      "C(YYYYMM)[T.202112]    -3.0550      0.698     -4.376      0.000      -4.423      -1.687\n",
      "C(YYYYMM)[T.202201]    -3.5615      0.683     -5.212      0.000      -4.901      -2.222\n",
      "C(YYYYMM)[T.202202]    -3.7384      0.664     -5.629      0.000      -5.040      -2.437\n",
      "C(YYYYMM)[T.202203]    -2.3977      0.697     -3.440      0.001      -3.764      -1.031\n",
      "C(YYYYMM)[T.202204]    -1.8723      0.745     -2.512      0.012      -3.333      -0.412\n",
      "C(YYYYMM)[T.202205]    -1.9094      0.734     -2.602      0.009      -3.347      -0.471\n",
      "C(YYYYMM)[T.202206]    -1.4703      0.760     -1.936      0.053      -2.959       0.018\n",
      "C(YYYYMM)[T.202207]    -1.1528      0.798     -1.445      0.148      -2.716       0.410\n",
      "C(YYYYMM)[T.202208]    -2.6841      0.736     -3.649      0.000      -4.126      -1.242\n",
      "C(YYYYMM)[T.202209]    -2.4823      0.749     -3.314      0.001      -3.951      -1.014\n",
      "C(YYYYMM)[T.202210]    -2.1063      0.748     -2.816      0.005      -3.572      -0.640\n",
      "C(YYYYMM)[T.202211]    -1.7681      0.770     -2.296      0.022      -3.278      -0.259\n",
      "C(YYYYMM)[T.202212]    -2.2588      0.785     -2.879      0.004      -3.797      -0.721\n",
      "C(YYYYMM)[T.202301]    -3.0912      0.741     -4.170      0.000      -4.544      -1.638\n",
      "C(YYYYMM)[T.202302]    -3.5667      0.716     -4.981      0.000      -4.970      -2.163\n",
      "C(YYYYMM)[T.202303]    -3.5182      0.739     -4.762      0.000      -4.966      -2.070\n",
      "C(YYYYMM)[T.202304]    -3.0541      0.760     -4.019      0.000      -4.543      -1.565\n",
      "C(YYYYMM)[T.202305]    -3.4948      0.746     -4.685      0.000      -4.957      -2.033\n",
      "C(YYYYMM)[T.202306]    -3.8867      0.735     -5.292      0.000      -5.326      -2.447\n",
      "C(YYYYMM)[T.202307]    -4.3762      0.721     -6.072      0.000      -5.789      -2.964\n",
      "C(YYYYMM)[T.202308]    -4.0405      0.737     -5.479      0.000      -5.486      -2.595\n",
      "C(YYYYMM)[T.202309]    -4.5314      0.703     -6.441      0.000      -5.910      -3.153\n",
      "C(YYYYMM)[T.202310]    -3.0373      0.752     -4.037      0.000      -4.512      -1.563\n",
      "C(YYYYMM)[T.202311]    -3.3420      0.753     -4.437      0.000      -4.818      -1.866\n",
      "C(YYYYMM)[T.202312]    -4.0554      0.806     -5.030      0.000      -5.636      -2.475\n",
      "C(YYYYMM)[T.202401]    -4.8362      0.795     -6.081      0.000      -6.395      -3.278\n",
      "C(YYYYMM)[T.202402]    -5.0998      0.723     -7.051      0.000      -6.517      -3.682\n",
      "C(YYYYMM)[T.202403]    -5.6099      0.727     -7.715      0.000      -7.035      -4.185\n",
      "C(YYYYMM)[T.202404]    -3.7870      0.880     -4.305      0.000      -5.511      -2.063\n",
      "C(YYYYMM)[T.202405]    -4.9780      0.800     -6.220      0.000      -6.547      -3.409\n",
      "C(YYYYMM)[T.202406]    -4.8406      0.939     -5.153      0.000      -6.682      -3.000\n",
      "D_more                  1.2530      0.030     41.723      0.000       1.194       1.312\n",
      "D_less                 -0.3456      0.032    -10.958      0.000      -0.407      -0.284\n",
      "=======================================================================================\n"
     ]
    }
   ],
   "source": [
    "# Drop missing rows\n",
    "reg_df_panel = df_panel[['PX1Q2', 'D_more', 'D_less', 'YYYYMM', 'person_id']].dropna()\n",
    "\n",
    "# Ensure categorical\n",
    "reg_df_panel['YYYYMM'] = reg_df_panel['YYYYMM'].astype('category')\n",
    "\n",
    "# Regression (3): Time FE only\n",
    "reg3 = smf.ols(\"PX1Q2 ~ D_more + D_less + C(YYYYMM)\", data=reg_df_panel).fit(cov_type=\"HC1\")\n",
    "\n",
    "print(\"=== Regression (3): Time Fixed Effects (Panel Sample) ===\")\n",
    "print(reg3.summary().tables[1])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "98f2317b-1da0-4471-bd9a-272805d20f2b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting linearmodels\n",
      "  Downloading linearmodels-6.1-cp311-cp311-macosx_11_0_arm64.whl.metadata (7.9 kB)\n",
      "Requirement already satisfied: numpy<3,>=1.22.3 in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from linearmodels) (1.26.4)\n",
      "Requirement already satisfied: pandas>=1.4.0 in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from linearmodels) (2.2.3)\n",
      "Requirement already satisfied: scipy>=1.8.0 in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from linearmodels) (1.11.4)\n",
      "Requirement already satisfied: statsmodels>=0.13.0 in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from linearmodels) (0.14.0)\n",
      "Requirement already satisfied: mypy-extensions>=0.4 in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from linearmodels) (1.0.0)\n",
      "Requirement already satisfied: Cython>=3.0.10 in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from linearmodels) (3.0.11)\n",
      "Collecting pyhdfe>=0.1 (from linearmodels)\n",
      "  Downloading pyhdfe-0.2.0-py3-none-any.whl.metadata (4.0 kB)\n",
      "Collecting formulaic>=1.0.0 (from linearmodels)\n",
      "  Downloading formulaic-1.1.1-py3-none-any.whl.metadata (6.9 kB)\n",
      "Collecting setuptools-scm<9.0.0,>=8.0.0 (from setuptools-scm[toml]<9.0.0,>=8.0.0->linearmodels)\n",
      "  Downloading setuptools_scm-8.3.1-py3-none-any.whl.metadata (7.0 kB)\n",
      "Collecting interface-meta>=1.2.0 (from formulaic>=1.0.0->linearmodels)\n",
      "  Downloading interface_meta-1.3.0-py3-none-any.whl.metadata (6.7 kB)\n",
      "Requirement already satisfied: typing-extensions>=4.2.0 in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from formulaic>=1.0.0->linearmodels) (4.9.0)\n",
      "Requirement already satisfied: wrapt>=1.0 in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from formulaic>=1.0.0->linearmodels) (1.14.1)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from pandas>=1.4.0->linearmodels) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2020.1 in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from pandas>=1.4.0->linearmodels) (2023.3.post1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from pandas>=1.4.0->linearmodels) (2023.3)\n",
      "Requirement already satisfied: packaging>=20 in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from setuptools-scm<9.0.0,>=8.0.0->setuptools-scm[toml]<9.0.0,>=8.0.0->linearmodels) (23.1)\n",
      "Requirement already satisfied: setuptools in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from setuptools-scm<9.0.0,>=8.0.0->setuptools-scm[toml]<9.0.0,>=8.0.0->linearmodels) (68.2.2)\n",
      "Requirement already satisfied: patsy>=0.5.2 in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from statsmodels>=0.13.0->linearmodels) (0.5.3)\n",
      "Requirement already satisfied: six in /Users/tylersotomayor/anaconda3/lib/python3.11/site-packages (from patsy>=0.5.2->statsmodels>=0.13.0->linearmodels) (1.16.0)\n",
      "Downloading linearmodels-6.1-cp311-cp311-macosx_11_0_arm64.whl (1.7 MB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.7/1.7 MB\u001b[0m \u001b[31m9.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0ma \u001b[36m0:00:01\u001b[0m\n",
      "\u001b[?25hDownloading formulaic-1.1.1-py3-none-any.whl (115 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m115.7/115.7 kB\u001b[0m \u001b[31m5.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading pyhdfe-0.2.0-py3-none-any.whl (19 kB)\n",
      "Downloading setuptools_scm-8.3.1-py3-none-any.whl (43 kB)\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m43.9/43.9 kB\u001b[0m \u001b[31m2.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
      "\u001b[?25hDownloading interface_meta-1.3.0-py3-none-any.whl (14 kB)\n",
      "Installing collected packages: setuptools-scm, interface-meta, pyhdfe, formulaic, linearmodels\n",
      "Successfully installed formulaic-1.1.1 interface-meta-1.3.0 linearmodels-6.1 pyhdfe-0.2.0 setuptools-scm-8.3.1\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install linearmodels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "24b00c14-8192-45ef-9869-aca45f1a76f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/bk/6srdc2qx62b56c7594wqt1yw0000gn/T/ipykernel_80757/104772469.py:11: MemoryWarning: Using low-memory algorithm to estimate two-way model. Explicitly set low_memory=True to silence this message.  Set low_memory=False to use the standard algorithm that creates dummy variables for the smaller of the number of entities or number of time periods.\n",
      "  reg4 = model4.fit(cov_type=\"robust\")\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "=== Regression (4): Consumer and Time Fixed Effects ===\n",
      "                          PanelOLS Estimation Summary                           \n",
      "================================================================================\n",
      "Dep. Variable:                  PX1Q2   R-squared:                        0.0023\n",
      "Estimator:                   PanelOLS   R-squared (Between):              0.0288\n",
      "No. Observations:              175123   R-squared (Within):               0.0032\n",
      "Date:                Mon, May 05 2025   R-squared (Overall):              0.0270\n",
      "Time:                        12:28:16   Log-likelihood                 -4.12e+05\n",
      "Cov. Estimator:                Robust                                           \n",
      "                                        F-statistic:                      87.048\n",
      "Entities:                      100288   P-value                           0.0000\n",
      "Avg Obs:                       1.7462   Distribution:                 F(2,74306)\n",
      "Min Obs:                       1.0000                                           \n",
      "Max Obs:                       3.0000   F-statistic (robust):             61.688\n",
      "                                        P-value                           0.0000\n",
      "Time periods:                     528   Distribution:                 F(2,74306)\n",
      "Avg Obs:                       331.67                                           \n",
      "Min Obs:                       88.000                                           \n",
      "Max Obs:                       499.00                                           \n",
      "                                                                                \n",
      "                             Parameter Estimates                              \n",
      "==============================================================================\n",
      "            Parameter  Std. Err.     T-stat    P-value    Lower CI    Upper CI\n",
      "------------------------------------------------------------------------------\n",
      "D_more         0.4411     0.0443     9.9543     0.0000      0.3542      0.5279\n",
      "D_less        -0.1490     0.0469    -3.1791     0.0015     -0.2408     -0.0571\n",
      "==============================================================================\n",
      "\n",
      "F-test for Poolability: 2.4826\n",
      "P-value: 0.0000\n",
      "Distribution: F(100814,74306)\n",
      "\n",
      "Included effects: Entity, Time\n"
     ]
    }
   ],
   "source": [
    "from linearmodels.panel import PanelOLS\n",
    "\n",
    "# 1. Convert YYYYMM to integer (if it's still a string or category)\n",
    "reg_df_panel[\"YYYYMM\"] = reg_df_panel[\"YYYYMM\"].astype(int)\n",
    "\n",
    "# 2. Set panel index (person_id, YYYYMM)\n",
    "panel_df = reg_df_panel.set_index([\"person_id\", \"YYYYMM\"])\n",
    "\n",
    "# 3. Fit the model with entity and time fixed effects\n",
    "model4 = PanelOLS.from_formula(\"PX1Q2 ~ D_more + D_less + EntityEffects + TimeEffects\", data=panel_df)\n",
    "reg4 = model4.fit(cov_type=\"robust\")\n",
    "\n",
    "# 4. Print results\n",
    "print(\"=== Regression (4): Consumer and Time Fixed Effects ===\")\n",
    "print(reg4.summary)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "9189503c-a392-4b9b-9bc2-218e1520951e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "N for Regression (1): 249482.0\n",
      "N for Regression (2): 249482.0\n",
      "N for Regression (3): 175123.0\n",
      "N for Regression (4): 175123\n",
      "Rows in reg_df_cross (Reg 1 & 2): 330503\n",
      "Rows in reg_df_panel (Reg 3 & 4): 229527\n"
     ]
    }
   ],
   "source": [
    "print(\"N for Regression (1):\", reg1.nobs)\n",
    "print(\"N for Regression (2):\", reg2.nobs)\n",
    "print(\"N for Regression (3):\", reg3.nobs)\n",
    "print(\"N for Regression (4):\", reg4.nobs)\n",
    "print(\"Rows in df_cross (Reg 1 & 2):\", df_cross.shape[0])\n",
    "print(\"Rows in df_panel (Reg 3 & 4):\", df_panel.shape[0])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "f0d487fc-267f-40da-ab05-8fa8a6957a7a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "reg1.rsquared: 0.022658337419014463\n",
      "reg2.rsquared: 0.13901429488524197\n",
      "reg3.rsquared: 0.09719818282443571\n",
      "reg4.rsquared: 0.0023374833753393442\n"
     ]
    }
   ],
   "source": [
    "# Inspect r-squared values\n",
    "print(\"reg1.rsquared:\", reg1.rsquared)\n",
    "print(\"reg2.rsquared:\", reg2.rsquared)\n",
    "print(\"reg3.rsquared:\", reg3.rsquared)\n",
    "print(\"reg4.rsquared:\", reg4.rsquared)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "30089d4e-622a-4b43-95de-6d6639defaef",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/bk/6srdc2qx62b56c7594wqt1yw0000gn/T/ipykernel_80757/327203624.py:20: MemoryWarning: Using low-memory algorithm to estimate two-way model. Explicitly set low_memory=True to silence this message.  Set low_memory=False to use the standard algorithm that creates dummy variables for the smaller of the number of entities or number of time periods.\n",
      "  reg4 = model4.fit(cov_type=\"robust\")\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                          PanelOLS Estimation Summary                           \n",
      "================================================================================\n",
      "Dep. Variable:                  PX1Q2   R-squared:                        0.0023\n",
      "Estimator:                   PanelOLS   R-squared (Between):              0.0112\n",
      "No. Observations:              175123   R-squared (Within):               0.0032\n",
      "Date:                Mon, May 05 2025   R-squared (Overall):              0.0100\n",
      "Time:                        13:48:54   Log-likelihood                 -4.12e+05\n",
      "Cov. Estimator:                Robust                                           \n",
      "                                        F-statistic:                      87.048\n",
      "Entities:                      100288   P-value                           0.0000\n",
      "Avg Obs:                       1.7462   Distribution:                 F(2,74306)\n",
      "Min Obs:                       1.0000                                           \n",
      "Max Obs:                       3.0000   F-statistic (robust):             61.688\n",
      "                                        P-value                           0.0000\n",
      "Time periods:                     528   Distribution:                 F(2,74306)\n",
      "Avg Obs:                       331.67                                           \n",
      "Min Obs:                       88.000                                           \n",
      "Max Obs:                       499.00                                           \n",
      "                                                                                \n",
      "                             Parameter Estimates                              \n",
      "==============================================================================\n",
      "            Parameter  Std. Err.     T-stat    P-value    Lower CI    Upper CI\n",
      "------------------------------------------------------------------------------\n",
      "const          5.2163     0.0204     255.48     0.0000      5.1763      5.2563\n",
      "D_more         0.4411     0.0443     9.9543     0.0000      0.3542      0.5279\n",
      "D_less        -0.1490     0.0469    -3.1791     0.0015     -0.2408     -0.0571\n",
      "==============================================================================\n",
      "\n",
      "F-test for Poolability: 2.4826\n",
      "P-value: 0.0000\n",
      "Distribution: F(100814,74306)\n",
      "\n",
      "Included effects: Entity, Time\n"
     ]
    }
   ],
   "source": [
    "# Re-do Regression 4\n",
    "\n",
    "from linearmodels.panel import PanelOLS\n",
    "import pandas as pd\n",
    "import statsmodels.api as sm\n",
    "\n",
    "# 1. Make sure data is sorted and indexed\n",
    "reg_df_panel[\"YYYYMM\"] = reg_df_panel[\"YYYYMM\"].astype(int)\n",
    "panel_df = reg_df_panel.set_index([\"person_id\", \"YYYYMM\"]).sort_index()\n",
    "\n",
    "# 2. Select dependent and exogenous variables\n",
    "y = panel_df[\"PX1Q2\"]\n",
    "X = panel_df[[\"D_more\", \"D_less\"]]\n",
    "\n",
    "# 3. Add constant (PanelOLS does not include one by default)\n",
    "X = sm.add_constant(X)\n",
    "\n",
    "# 4. Estimate PanelOLS with entity and time fixed effects\n",
    "model4 = PanelOLS(y, X, entity_effects=True, time_effects=True)\n",
    "reg4 = model4.fit(cov_type=\"robust\")\n",
    "\n",
    "# 5. Print results\n",
    "print(reg4.summary)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "81d4aacc-83fd-431e-86ee-1e2e9b56afb8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R-squared: 0.09719818282443571\n",
      "Adjusted R-squared: 0.09446278013769638\n"
     ]
    }
   ],
   "source": [
    "print(\"R-squared:\", reg3.rsquared)\n",
    "print(\"Adjusted R-squared:\", reg3.rsquared_adj)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "7e890c47-7025-4862-9d0e-c6591994ede5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Save cross-sectional dataset\n",
    "df_cross.to_csv(\"msc_cross_section.csv\", index=False)\n",
    "\n",
    "# Save panel dataset\n",
    "df_panel.to_csv(\"msc_panel.csv\", index=False)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "799f0fa4-c501-4a5a-ba59-db1bb071c17b",
   "metadata": {},
   "source": [
    "# Switching the variables. Dependent variable is now Unemployment Expectations. We use a logit-probit model specification"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47c0708b-b3eb-4446-afab-83ac6b63690e",
   "metadata": {},
   "source": [
    "### Step 1 — Load the Data\n",
    "\n",
    "We begin by loading the cross-sectional dataset `msc_cross_section.csv`.  \n",
    "Before selecting columns, we inspect the full list of column names to confirm spelling and formatting.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "4bd5bd42-ad13-415e-b034-c562c3fdb1eb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['temp_id', 'CASEID', 'YYYYMM', 'ID', 'IDPREV', 'DATEPR', 'IDPREV2', 'DATEPR2', 'PX1Q2', 'UNEMP', 'WT_HH', 'D_more', 'D_less', 'person_id']\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the data with low_memory=False to avoid warnings\n",
    "df = pd.read_csv('msc_cross_section.csv', low_memory=False)\n",
    "\n",
    "# Print all column names to find the correct labels\n",
    "print(df.columns.tolist())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eaf85afa-c91c-46ab-92d0-19abefb9c7a1",
   "metadata": {},
   "source": [
    "### Step 2 — Select Relevant Variables\n",
    "\n",
    "We extract the unemployment expectations (`UNEMP`) as the new **dependent variable** and the inflation expectations (`PX1Q2`) as the **independent variable**. \n",
    "We'll preview the first few rows after dropping missing values.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "72e7afcc-ef42-401d-91b6-d7bff8c7574d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>UNEMP</th>\n",
       "      <th>PX1Q2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>3</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   UNEMP  PX1Q2\n",
       "0      1    3.0\n",
       "1      3   10.0\n",
       "2      3   20.0\n",
       "3      3    4.0\n",
       "7      3    6.0"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Subset and drop missing observations\n",
    "df_subset = df[['UNEMP', 'PX1Q2']].dropna()\n",
    "\n",
    "# Preview the data\n",
    "df_subset.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a29654a-660c-492d-b4d4-593d7b71ce14",
   "metadata": {},
   "source": [
    "### Step 3 — Check Number of Response Categories\n",
    "\n",
    "Before estimating a multinomial logit model, we need to confirm that the dependent variable (`UNEMP`) has more than two unique, unordered categories.\n",
    "This helps justify the use of a multinomial logit (instead of binary logit or ordered logit).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "a360a094-04e4-4d3c-84de-b7ea46570b29",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "UNEMP\n",
       "1     87871\n",
       "3    117820\n",
       "5     43791\n",
       "8      1352\n",
       "9       487\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Count unique values in the dependent variable\n",
    "df_subset['UNEMP'].value_counts().sort_index()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9096d34b-4644-4b12-9498-8b5afaa41ad2",
   "metadata": {},
   "source": [
    "# Step 1: Recode UNEMP expectations into human-readable categories\n",
    "- According to the codebook, here is how we interpret UNEMP values:\n",
    "- 1 = More unemployment expected\n",
    "- 3 = Same unemployment expected\n",
    "- 5 = Less unemployment expected\n",
    "- 8, 9 = Don't know / Not answered (we'll treat these as missing)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "1d61f363-0fca-4d95-995d-e50e2e9c5555",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "unemp_cat\n",
       "Same    154123\n",
       "More    111336\n",
       "Less     60900\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Define mapping\n",
    "unemp_map = {\n",
    "    1: 'More',\n",
    "    3: 'Same',\n",
    "    5: 'Less',\n",
    "    8: 'DK',\n",
    "    9: 'NA'\n",
    "}\n",
    "\n",
    "# Apply mapping\n",
    "df['unemp_cat'] = df['UNEMP'].map(unemp_map)\n",
    "\n",
    "# Drop rows with missing or ambiguous responses\n",
    "df_clean = df[df['unemp_cat'].isin(['More', 'Same', 'Less'])].copy()\n",
    "\n",
    "# Check distribution of categories\n",
    "df_clean['unemp_cat'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "60d96ec0-9af0-4fdf-8173-299bcefbcf67",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PX1Q2\n",
       "1.0     26761\n",
       "2.0     29775\n",
       "3.0     51187\n",
       "4.0     15269\n",
       "5.0     50752\n",
       "6.0      5112\n",
       "7.0     11481\n",
       "8.0      3777\n",
       "9.0      3077\n",
       "10.0    27343\n",
       "11.0     1417\n",
       "12.0     1931\n",
       "13.0     2980\n",
       "14.0      167\n",
       "15.0     6146\n",
       "16.0       86\n",
       "17.0      958\n",
       "18.0      184\n",
       "19.0       70\n",
       "20.0     4388\n",
       "21.0       22\n",
       "22.0       22\n",
       "23.0      269\n",
       "24.0       21\n",
       "25.0     2462\n",
       "26.0        9\n",
       "27.0      154\n",
       "28.0       11\n",
       "29.0        9\n",
       "30.0      991\n",
       "31.0        7\n",
       "32.0        2\n",
       "33.0       78\n",
       "34.0        3\n",
       "35.0      260\n",
       "36.0        2\n",
       "37.0       73\n",
       "38.0        6\n",
       "39.0        4\n",
       "40.0      327\n",
       "41.0        6\n",
       "43.0       14\n",
       "45.0       82\n",
       "46.0        1\n",
       "47.0       11\n",
       "48.0        1\n",
       "49.0        6\n",
       "50.0     1754\n",
       "51.0        2\n",
       "54.0        1\n",
       "70.0        1\n",
       "71.0        1\n",
       "75.0        3\n",
       "80.0        1\n",
       "95.0        5\n",
       "NaN     76877\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Examine value counts for PX1Q2\n",
    "df_clean['PX1Q2'].value_counts(dropna=False).sort_index()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "412382f3-2b37-46e6-91e7-db3f0cc6fec0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop NaN values from PX1Q2 and UNEMP\n",
    "df_model = df_clean.dropna(subset=['PX1Q2', 'UNEMP'])\n",
    "\n",
    "# Cap PX1Q2 at 50% (optional, can be adjusted)\n",
    "df_model = df_model[df_model['PX1Q2'] <= 50]\n",
    "\n",
    "# Rename inflation expectation variable for clarity\n",
    "df_model = df_model.rename(columns={'PX1Q2': 'pi_exp_next12m'})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "f36f76b6-b3f6-4cda-8230-bbf444e97d4d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "unemp_exp_next12m\n",
       "Same    117816\n",
       "More     87862\n",
       "Less     43790\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 📌 Step 3: Convert UNEMP codes to ordered categories for ordinal modeling\n",
    "\n",
    "# Define a mapping from numeric codes to interpretable labels\n",
    "unemp_mapping = {1: 'More', 3: 'Same', 5: 'Less'}\n",
    "\n",
    "# Apply the mapping\n",
    "df_model['unemp_exp_next12m'] = df_model['UNEMP'].map(unemp_mapping)\n",
    "\n",
    "# Convert to ordered categorical type\n",
    "from pandas.api.types import CategoricalDtype\n",
    "ordered_unemp_type = CategoricalDtype(categories=['Less', 'Same', 'More'], ordered=True)\n",
    "df_model['unemp_exp_next12m'] = df_model['unemp_exp_next12m'].astype(ordered_unemp_type)\n",
    "\n",
    "# Check value counts to confirm\n",
    "df_model['unemp_exp_next12m'].value_counts()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "d832d4a9-e256-4c3a-808a-dc3fdd8c0052",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Final shape of modeling dataset: (249468, 16)\n"
     ]
    },
    {
     "ename": "KeyError",
     "evalue": "\"['PX1Q2'] not in index\"",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[35], line 7\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mFinal shape of modeling dataset:\u001b[39m\u001b[38;5;124m\"\u001b[39m, df_model\u001b[38;5;241m.\u001b[39mshape)\n\u001b[1;32m      6\u001b[0m \u001b[38;5;66;03m# Check for missing values in key columns\u001b[39;00m\n\u001b[0;32m----> 7\u001b[0m df_model[[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124munemp_exp_next12m\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mPX1Q2\u001b[39m\u001b[38;5;124m'\u001b[39m]]\u001b[38;5;241m.\u001b[39misna()\u001b[38;5;241m.\u001b[39msum()\n\u001b[1;32m      9\u001b[0m \u001b[38;5;66;03m# Drop any remaining rows with missing values (if needed)\u001b[39;00m\n\u001b[1;32m     10\u001b[0m df_model_clean \u001b[38;5;241m=\u001b[39m df_model\u001b[38;5;241m.\u001b[39mdropna(subset\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124munemp_exp_next12m\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mPX1Q2\u001b[39m\u001b[38;5;124m'\u001b[39m])\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.11/site-packages/pandas/core/frame.py:4108\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   4106\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m is_iterator(key):\n\u001b[1;32m   4107\u001b[0m         key \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(key)\n\u001b[0;32m-> 4108\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39m_get_indexer_strict(key, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcolumns\u001b[39m\u001b[38;5;124m\"\u001b[39m)[\u001b[38;5;241m1\u001b[39m]\n\u001b[1;32m   4110\u001b[0m \u001b[38;5;66;03m# take() does not accept boolean indexers\u001b[39;00m\n\u001b[1;32m   4111\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mgetattr\u001b[39m(indexer, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdtype\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m) \u001b[38;5;241m==\u001b[39m \u001b[38;5;28mbool\u001b[39m:\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.11/site-packages/pandas/core/indexes/base.py:6200\u001b[0m, in \u001b[0;36mIndex._get_indexer_strict\u001b[0;34m(self, key, axis_name)\u001b[0m\n\u001b[1;32m   6197\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m   6198\u001b[0m     keyarr, indexer, new_indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_reindex_non_unique(keyarr)\n\u001b[0;32m-> 6200\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_raise_if_missing(keyarr, indexer, axis_name)\n\u001b[1;32m   6202\u001b[0m keyarr \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtake(indexer)\n\u001b[1;32m   6203\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(key, Index):\n\u001b[1;32m   6204\u001b[0m     \u001b[38;5;66;03m# GH 42790 - Preserve name from an Index\u001b[39;00m\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.11/site-packages/pandas/core/indexes/base.py:6252\u001b[0m, in \u001b[0;36mIndex._raise_if_missing\u001b[0;34m(self, key, indexer, axis_name)\u001b[0m\n\u001b[1;32m   6249\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNone of [\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mkey\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m] are in the [\u001b[39m\u001b[38;5;132;01m{\u001b[39;00maxis_name\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m]\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   6251\u001b[0m not_found \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(ensure_index(key)[missing_mask\u001b[38;5;241m.\u001b[39mnonzero()[\u001b[38;5;241m0\u001b[39m]]\u001b[38;5;241m.\u001b[39munique())\n\u001b[0;32m-> 6252\u001b[0m \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mnot_found\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m not in index\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "\u001b[0;31mKeyError\u001b[0m: \"['PX1Q2'] not in index\""
     ]
    }
   ],
   "source": [
    "# 📌 Step 4: Confirm final shape and inspect missing values\n",
    "\n",
    "# Show shape of final dataset\n",
    "print(\"Final shape of modeling dataset:\", df_model.shape)\n",
    "\n",
    "# Check for missing values in key columns\n",
    "df_model[['unemp_exp_next12m', 'PX1Q2']].isna().sum()\n",
    "\n",
    "# Drop any remaining rows with missing values (if needed)\n",
    "df_model_clean = df_model.dropna(subset=['unemp_exp_next12m', 'PX1Q2'])\n",
    "\n",
    "# Confirm updated shape after dropping NAs\n",
    "print(\"Final shape after dropping missing:\", df_model_clean.shape)\n",
    "\n",
    "# Preview cleaned data\n",
    "df_model_clean[['unemp_exp_next12m', 'PX1Q2']].head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "3257dbbb-4e28-4896-bb58-5c62b0af47b7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['temp_id', 'CASEID', 'YYYYMM', 'ID', 'IDPREV', 'DATEPR', 'IDPREV2',\n",
       "       'DATEPR2', 'pi_exp_next12m', 'UNEMP', 'WT_HH', 'D_more', 'D_less',\n",
       "       'person_id', 'unemp_cat', 'unemp_exp_next12m'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# List current columns in the dataset\n",
    "df_model.columns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "9ceb5a4e-3653-425c-b60b-f27422ae985f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "unemp_exp_next12m    0\n",
       "pi_exp_next12m       0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_model[['unemp_exp_next12m', 'pi_exp_next12m']].isna().sum()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "32d6e914-96d2-470f-9f85-8b4120ab561b",
   "metadata": {},
   "source": [
    "## Step 4: Estimate Multinomial Logistic Regression\n",
    "\n",
    "We now estimate a Multinomial Logit model where the dependent variable is `unemp_exp_next12m`, representing the respondent’s expectations about unemployment (categorized as \"Less\", \"Same\", or \"More\"). \n",
    "\n",
    "The independent variable is `pi_exp_next12m`, which reflects their inflation expectations.\n",
    "\n",
    "This model will help us explore whether people expecting higher inflation are systematically more (or less) likely to expect unemployment to increase, stay the same, or decrease.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "25cf1c73-c19e-432a-991f-dc143842ac67",
   "metadata": {},
   "source": [
    "### Step 4 (Revised): Encode the Dependent Variable Numerically\n",
    "\n",
    "We need to encode the `unemp_exp_next12m` categorical variable into numeric codes so that the multinomial logit model can interpret it. We'll preserve the mapping for interpretation of results.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "7f7f644e-4c02-4b1e-a091-8b48b476527c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>unemp_exp_next12m</th>\n",
       "      <th>unemp_exp_code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>More</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Same</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Less</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   unemp_exp_next12m unemp_exp_code\n",
       "0               More              2\n",
       "1               Same              1\n",
       "20              Less              0"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a mapping from categories to integers\n",
    "category_mapping = {\n",
    "    'Less': 0,\n",
    "    'Same': 1,\n",
    "    'More': 2\n",
    "}\n",
    "\n",
    "# Apply the mapping\n",
    "df_model['unemp_exp_code'] = df_model['unemp_exp_next12m'].map(category_mapping)\n",
    "\n",
    "# Confirm the conversion\n",
    "df_model[['unemp_exp_next12m', 'unemp_exp_code']].drop_duplicates()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "748ecbf9-1af4-42a5-b629-2829379911bf",
   "metadata": {},
   "source": [
    "### Step 5: Estimate the Multinomial Logit Model\n",
    "\n",
    "We now estimate a multinomial logit model using inflation expectations (`pi_exp_next12m`) to predict categorical unemployment expectations (`unemp_exp_code`). The model estimates the log-odds of being in each unemployment expectation category relative to the base case.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "1d4ba1e4-4be1-41cb-9e8c-9fcf88616e44",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 1.016182\n",
      "         Iterations 6\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>MNLogit Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>    <td>unemp_exp_code</td>  <th>  No. Observations:  </th>   <td>249468</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                <td>MNLogit</td>     <th>  Df Residuals:      </th>   <td>249464</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>                 <td>MLE</td>       <th>  Df Model:          </th>   <td>     2</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>            <td>Mon, 05 May 2025</td> <th>  Pseudo R-squ.:     </th>   <td>0.01078</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                <td>14:57:40</td>     <th>  Log-Likelihood:    </th> <td>-2.5350e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>converged:</th>             <td>True</td>       <th>  LL-Null:           </th> <td>-2.5627e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>     <td>nonrobust</td>    <th>  LLR p-value:       </th>   <td> 0.000</td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>unemp_exp_code=1</th>    <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>            <td>    0.9432</td> <td>    0.008</td> <td>  112.599</td> <td> 0.000</td> <td>    0.927</td> <td>    0.960</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>pi_exp_next12m</th>   <td>    0.0088</td> <td>    0.001</td> <td>    7.393</td> <td> 0.000</td> <td>    0.006</td> <td>    0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>unemp_exp_code=2</th>    <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>            <td>    0.3568</td> <td>    0.009</td> <td>   41.097</td> <td> 0.000</td> <td>    0.340</td> <td>    0.374</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>pi_exp_next12m</th>   <td>    0.0561</td> <td>    0.001</td> <td>   48.681</td> <td> 0.000</td> <td>    0.054</td> <td>    0.058</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:}     & unemp\\_exp\\_code & \\textbf{  No. Observations:  } &    249468    \\\\\n",
       "\\textbf{Model:}             &     MNLogit      & \\textbf{  Df Residuals:      } &    249464    \\\\\n",
       "\\textbf{Method:}            &       MLE        & \\textbf{  Df Model:          } &         2    \\\\\n",
       "\\textbf{Date:}              & Mon, 05 May 2025 & \\textbf{  Pseudo R-squ.:     } &   0.01078    \\\\\n",
       "\\textbf{Time:}              &     14:57:40     & \\textbf{  Log-Likelihood:    } & -2.5350e+05  \\\\\n",
       "\\textbf{converged:}         &       True       & \\textbf{  LL-Null:           } & -2.5627e+05  \\\\\n",
       "\\textbf{Covariance Type:}   &    nonrobust     & \\textbf{  LLR p-value:       } &     0.000    \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{ccccccc}\n",
       "\\textbf{unemp\\_exp\\_code=1} & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "\\textbf{const}              &       0.9432  &        0.008     &   112.599  &         0.000        &        0.927    &        0.960     \\\\\n",
       "\\textbf{pi\\_exp\\_next12m}   &       0.0088  &        0.001     &     7.393  &         0.000        &        0.006    &        0.011     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{ccccccc}\n",
       "\\textbf{unemp\\_exp\\_code=2} & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "\\textbf{const}              &       0.3568  &        0.009     &    41.097  &         0.000        &        0.340    &        0.374     \\\\\n",
       "\\textbf{pi\\_exp\\_next12m}   &       0.0561  &        0.001     &    48.681  &         0.000        &        0.054    &        0.058     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{MNLogit Regression Results}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                          MNLogit Regression Results                          \n",
       "==============================================================================\n",
       "Dep. Variable:         unemp_exp_code   No. Observations:               249468\n",
       "Model:                        MNLogit   Df Residuals:                   249464\n",
       "Method:                           MLE   Df Model:                            2\n",
       "Date:                Mon, 05 May 2025   Pseudo R-squ.:                 0.01078\n",
       "Time:                        14:57:40   Log-Likelihood:            -2.5350e+05\n",
       "converged:                       True   LL-Null:                   -2.5627e+05\n",
       "Covariance Type:            nonrobust   LLR p-value:                     0.000\n",
       "====================================================================================\n",
       "unemp_exp_code=1       coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------------\n",
       "const                0.9432      0.008    112.599      0.000       0.927       0.960\n",
       "pi_exp_next12m       0.0088      0.001      7.393      0.000       0.006       0.011\n",
       "------------------------------------------------------------------------------------\n",
       "unemp_exp_code=2       coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------------\n",
       "const                0.3568      0.009     41.097      0.000       0.340       0.374\n",
       "pi_exp_next12m       0.0561      0.001     48.681      0.000       0.054       0.058\n",
       "====================================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import statsmodels.api as sm\n",
    "\n",
    "# Define the dependent and independent variables\n",
    "y = df_model['unemp_exp_code']\n",
    "X = sm.add_constant(df_model['pi_exp_next12m'])  # include intercept\n",
    "\n",
    "# Fit the multinomial logit model\n",
    "model = sm.MNLogit(y, X)\n",
    "result = model.fit()\n",
    "\n",
    "# Display the summary\n",
    "result.summary()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6e0c9f7e-f799-4e84-8444-545372a90f36",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
